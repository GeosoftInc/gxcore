//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// 
// High Performance 3D Grid.
// 
//
//-----------------------------------------------------------------------------------------------------------



#ifndef MULTIVOXSET_GXH_DEFINED
#define MULTIVOXSET_GXH_DEFINED

//===========================================================================================================
//
// Define	DIRECTION3D
//
// Direction in 3D
//
// DIRECTION3D_XYZ   XYZ
// DIRECTION3D_YXZ   YXZ
// DIRECTION3D_XZY   XZY
// DIRECTION3D_YZX   YZX
// DIRECTION3D_ZXY   ZXY
// DIRECTION3D_ZYX   ZYX
//
//===========================================================================================================

#define DIRECTION3D_XYZ    0
#define DIRECTION3D_YXZ    1
#define DIRECTION3D_XZY    2
#define DIRECTION3D_YZX    3
#define DIRECTION3D_ZXY    4
#define DIRECTION3D_ZYX    5


//===========================================================================================================
//
// Define	GOCAD_ORIENTATION
//
// GOCAD Orientations
//
// GOCAD_ORIENTATIONS_NORMAL            Normal
// GOCAD_ORIENTATIONS_INVERTED          Inverted (Z)
// GOCAD_ORIENTATIONS_NORMAL_ZFIRST     Normal (ZFirst)
// GOCAD_ORIENTATIONS_INVERTED_ZFIRST   Inverted (Z) (ZFirst)
//
//===========================================================================================================

#define GOCAD_ORIENTATIONS_NORMAL             0
#define GOCAD_ORIENTATIONS_INVERTED           1
#define GOCAD_ORIENTATIONS_NORMAL_ZFIRST      2
#define GOCAD_ORIENTATIONS_INVERTED_ZFIRST    3


//===========================================================================================================
//
// Define	VECTOR_IMPORT
//
// Vector voxel import direction
//
// VECTOR_IMPORT_XYZ   X, Y and Z
// VECTOR_IMPORT_UVW   U, V and W
// VECTOR_IMPORT_AID   Amplitude, Inclination and Declination
//
//===========================================================================================================

#define VECTOR_IMPORT_XYZ    0
#define VECTOR_IMPORT_UVW    1
#define VECTOR_IMPORT_AID    2


//===========================================================================================================
//
// Define	FILTER3D
//
// Voxel filter type
//
// FILTER3D_FILE             Specify a file containing the 27-point filter
// FILTER3D_SMOOTHING        Smoothing filter
// FILTER3D_LAPLACE          Laplace filter
// FILTER3D_X_GRADIENT       X-Gradient filter
// FILTER3D_Y_GRADIENT       Y-Gradient filter
// FILTER3D_Z_GRADIENT       Z-Gradient filter
// FILTER3D_TOTAL_GRADIENT   Total-Gradient filter
//
//===========================================================================================================

#define FILTER3D_FILE              0
#define FILTER3D_SMOOTHING         1
#define FILTER3D_LAPLACE           2
#define FILTER3D_X_GRADIENT        3
#define FILTER3D_Y_GRADIENT        4
#define FILTER3D_Z_GRADIENT        5
#define FILTER3D_TOTAL_GRADIENT    6


//===========================================================================================================
//
// Define	MULTIVOXSET_DIRECTGRID_METHOD
//
// How to calculate the cell values for direct gridding.
//
// MULTIVOXSET_DIRECTGRID_MIN
// MULTIVOXSET_DIRECTGRID_MAX
// MULTIVOXSET_DIRECTGRID_MEAN
//
//===========================================================================================================

#define MULTIVOXSET_DIRECTGRID_MIN     0
#define MULTIVOXSET_DIRECTGRID_MAX     1
#define MULTIVOXSET_DIRECTGRID_MEAN    2


//-----------------------------------------------------------------------------------------------------------
// ImportFromXYZ_MULTIVOXSET   Import XYZ file into a Multi-Voxset
//
// Returns                     Nothing
//
// Available                   9.3.0
//

[_public] void
ImportFromXYZ_MULTIVOXSET (
                           string,  // Name of output Voxel file
                           RA,      // RA To import from
                           int,     // Data Type <define>GS_TYPES</define>
                           IPJ      // Projection
                           );


//-----------------------------------------------------------------------------------------------------------
// ExportToXYZ_MULTIVOXSET   Export a MULTIVOXSET to an XYZ File
//
// Returns                   Nothing
//
// Available                 9.3.0
//

[_public] void
ExportToXYZ_MULTIVOXSET (
                         string,  // Input Voxel file
                         string,  // File Name
                         int,     // <define>DIRECTION3D</define>
                         int,     // Reverse X ? (0/1)
                         int,     // Reverse Y ? (0/1)
                         int,     // Reverse Z ? (0/1)
                         int      // Write Dummies? (0/1)
                         );


//-----------------------------------------------------------------------------------------------------------
// ExportToBinary_MULTIVOXSET   Export contents of MULTIVOXSET to a Binary File.
//
// Returns                      Nothing
//
// Available                    9.3.0
//

[_licensed] void
ExportToBinary_MULTIVOXSET (
                            string,  // Input Voxel file
                            string,  // Binary file to write to
                            int,     // <define>DIRECTION3D</define>
                            int,     // Reverse X ? (0/1)
                            int,     // Reverse Y ? (0/1)
                            int,     // Reverse Z ? (0/1)
                            int,     // Swap Bytes ? (0/1)
                            int      // Output Type (Geosoft Type)
                            );


//-----------------------------------------------------------------------------------------------------------
// ExportToXML_MULTIVOXSET   Export a MULTIVOXSET to XML
//
// Returns                   Nothing
//
// Available                 9.3.0
//

[_public] void
ExportToXML_MULTIVOXSET (
                         string,  // Voxel file
                         string   // XML file
                         );


//-----------------------------------------------------------------------------------------------------------
// CheckEqualToLegacyVoxel_MULTIVOXSET   Compare MULTIVOXSET to Legacy Voxel
//
// Returns                               Nothing
//
// Available                             9.3.0
//

[_public] void
CheckEqualToLegacyVoxel_MULTIVOXSET (
                                     string,  // Voxel file
                                     string   // Legacy Voxel file
                                     );


//-----------------------------------------------------------------------------------------------------------
// ImportFromUBC_MULTIVOXSET   Import UBC file into a MultiVoxset
//
// Returns                     Nothing
//
// Available                   9.3.0
//

[_public] void
ImportFromUBC_MULTIVOXSET (
                           string,  // Name of output VOX
                           string,  // Name of UBC Mesh File
                           string,  // Name of UBC Mod File
                           real,    // Dummy Value
                           IPJ      // Projection
                           );


//-----------------------------------------------------------------------------------------------------------
// ImportFromGOCAD_MULTIVOXSET   Imports a MultiVoxset from a GOCAD File
//
// Returns                       Nothing
//
// Available                     9.3.0
//

[_public] void
ImportFromGOCAD_MULTIVOXSET (
                             string,  // Name of output VOX
                             string,  // Name of GOCAD Voxel file
                             string,  // Propert name to import
                             IPJ,     // IPJ
                             int      // <define>GOCAD_ORIENTATION</define>
                             );


//-----------------------------------------------------------------------------------------------------------
// ListPropertiesGOCAD_MULTIVOXSET   List all the properties available in this GOCAD file.
//
// Returns                           Nothing
//
// Available                         9.3.0
//

[_public] void
ListPropertiesGOCAD_MULTIVOXSET (
                                 string,  // Name of GOCAD Voxel file
                                 LST      // List object to populate
                                 );


//-----------------------------------------------------------------------------------------------------------
// ImportFromGDB_MULTIVOXSET   Imports from a Geosoft Database
//
// Returns                     Nothing
//
// Available                   9.3.0
//

[_public] void
ImportFromGDB_MULTIVOXSET (
                           string,   // Name of output Voxel file
                           DB,       // DB To import from
                           DB_SYMB   // Symbol to import data from
                           );


//-----------------------------------------------------------------------------------------------------------
// ImportFromVectorGDB_MULTIVOXSET   Imports from a Vector Geosoft Database
//
// Returns                           Nothing
//
// Available                         9.3.0
//

[_public] void
ImportFromVectorGDB_MULTIVOXSET (
                                 string,   // Voxel Name
                                 DB,       // DB To import from
                                 int,      // <define>VECTOR_IMPORT</define>Import XYZ, UVW or Amplitude/Inclination/Declination channels
                                 DB_SYMB,  // Symbol to import X, U or Amplitude data from
                                 DB_SYMB,  // Symbol to import Y, V or Inclination data from
                                 DB_SYMB,  // Symbol to import Z, W or Declination data from
                                 real,     // Inclination value for VOX_VECTORVOX_UVW (-90° to 90°)
                                 real      // Declination value for VOX_VECTORVOX_UVW (-180° to 180°)
                                 );


//-----------------------------------------------------------------------------------------------------------
// ExportToSEGY_MULTIVOXSET   Export To SEGY
//
// Returns                    Nothing
//
// Available                  9.3.0
//

[_public] void
ExportToSEGY_MULTIVOXSET (
                          string,  // Input Voxel file
                          string,  // Voxel Name
                          string,  // Output Segy file
                          real     // Sampling Internal
                          );


//-----------------------------------------------------------------------------------------------------------
// ExportToGDB_MULTIVOXSET   Export To GDB
//
// Returns                   Nothing
//
// Available                 9.3.0
//

[_public] void
ExportToGDB_MULTIVOXSET (
                         string,  // Input Voxel file
                         DB,      // Database
                         string,  // Channel Name
                         int,     // <define>DIRECTION3D</define>
                         int,     // Reverse X ? (0/1)
                         int,     // Reverse Y ? (0/1)
                         int,     // Reverse Z ? (0/1)
                         int      // Write Dummies? (0/1)
                         );


//-----------------------------------------------------------------------------------------------------------
// ExportToWA_MULTIVOXSET   Export To GDB
//
// Returns                  Nothing
//
// Available                9.3.0
//

[_public] void
ExportToWA_MULTIVOXSET (
                        string,  // Input Voxel file
                        WA,      // WA File
                        int,     // <define>DIRECTION3D</define>
                        int,     // Reverse X ? (0/1)
                        int,     // Reverse Y ? (0/1)
                        int,     // Reverse Z ? (0/1)
                        string   // The Dummy string to write
                        );


//-----------------------------------------------------------------------------------------------------------
// ConvertDoubleToVector_MULTIVOXSET   Convert 3 Double Voxels to a Vector Voxel
//
// Returns                             Nothing
//
// Available                           9.3.0
//

[_public] void
ConvertDoubleToVector_MULTIVOXSET (
                                   string,  // Input X Voxel file
                                   string,  // Input Y Voxel file
                                   string,  // Input Z Voxel file
                                   string,  // Output Vector Voxel file
                                   real,    // Inclination
                                   real,    // Declination
                                   int      // Rotated ? (0/1)
                                   );


//-----------------------------------------------------------------------------------------------------------
// ConvertVectorToDouble_MULTIVOXSET   Convert a Vector Voxel to 3 double Voxels
//
// Returns                             Nothing
//
// Available                           9.3.0
//

[_public] void
ConvertVectorToDouble_MULTIVOXSET (
                                   string,  // Input Vector Voxel file
                                   string,  // Output X Voxel file
                                   string,  // Output Y Voxel file
                                   string   // Output Z Voxel file
                                   );


//-----------------------------------------------------------------------------------------------------------
// CreateDoubleConstant_MULTIVOXSET   Generate a double MultiVoxset with a constant value
//
// Returns                            Nothing
//
// Available                          9.3.0
//

[_public] void
CreateDoubleConstant_MULTIVOXSET (
                                  string,  // Name of output Voxel File
                                  real,    // Constant Value to use - DUMMY for a trully sparse voxel
                                  real,    // Origin X
                                  real,    // Origin Y
                                  real,    // Origin Z
                                  real,    // Cell Size X
                                  real,    // Cell Size Y
                                  real,    // Cell Size Z
                                  int,     // Cell Count X
                                  int,     // Cell Count Y
                                  int,     // Cell Count Z
                                  IPJ      // Projection
                                  );


//-----------------------------------------------------------------------------------------------------------
// CreateThematicConstant_MULTIVOXSET   Generate a double MultiVoxset with a constant value
//
// Returns                              Nothing
//
// Available                            9.3.0
//

[_public] void
CreateThematicConstant_MULTIVOXSET (
                                    string,  // Name of output Voxel File
                                    int,     // Constant Value to use - DUMMY for a trully sparse voxel
                                    real,    // Origin X
                                    real,    // Origin Y
                                    real,    // Origin Z
                                    real,    // Cell Size X
                                    real,    // Cell Size Y
                                    real,    // Cell Size Z
                                    int,     // Cell Count X
                                    int,     // Cell Count Y
                                    int,     // Cell Count Z
                                    IPJ      // Projection
                                    );


//-----------------------------------------------------------------------------------------------------------
// CreateVectorConstant_MULTIVOXSET   Generate a double MultiVoxset with a constant value
//
// Returns                            Nothing
//
// Available                          9.3.0
//

[_public] void
CreateVectorConstant_MULTIVOXSET (
                                  string,  // Name of output Voxel File
                                  real,    // X Constant Value to use - DUMMY for a trully sparse voxel
                                  real,    // Y Constant Value to use - DUMMY for a trully sparse voxel
                                  real,    // Z Constant Value to use - DUMMY for a trully sparse voxel
                                  real,    // Origin X
                                  real,    // Origin Y
                                  real,    // Origin Z
                                  real,    // Cell Size X
                                  real,    // Cell Size Y
                                  real,    // Cell Size Z
                                  int,     // Cell Count X
                                  int,     // Cell Count Y
                                  int,     // Cell Count Z
                                  IPJ      // Projection
                                  );


//-----------------------------------------------------------------------------------------------------------
// CreateDoubleConstantVV_MULTIVOXSET   Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Returns                              Nothing
//
// Available                            9.3.0
//

[_public] void
CreateDoubleConstantVV_MULTIVOXSET (
                                    string,  // Name of output Voxel
                                    real,    // The contant Value to fill with - DUMMY for a trully sparse voxel
                                    real,    // Origin X
                                    real,    // Origin Y
                                    real,    // Origin Z
                                    VV,      // Cell Sizes X
                                    VV,      // Cell Sizes Y
                                    VV,      // Cell Sizes Z
                                    IPJ      // Projection
                                    );


//-----------------------------------------------------------------------------------------------------------
// CreateThematicConstantVV_MULTIVOXSET   Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Returns                                Nothing
//
// Available                              9.3.0
//

[_public] void
CreateThematicConstantVV_MULTIVOXSET (
                                      string,  // Name of output Voxel
                                      int,     // The contant Value to fill with - DUMMY for a trully sparse voxel
                                      real,    // Origin X
                                      real,    // Origin Y
                                      real,    // Origin Z
                                      VV,      // Cell Sizes X
                                      VV,      // Cell Sizes Y
                                      VV,      // Cell Sizes Z
                                      IPJ      // Projection
                                      );


//-----------------------------------------------------------------------------------------------------------
// CreateVectorConstantVV_MULTIVOXSET   Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Returns                              Nothing
//
// Available                            9.3.0
//

[_public] void
CreateVectorConstantVV_MULTIVOXSET (
                                    string,  // Name of output Voxel
                                    real,    // The X contant Value to fill with - DUMMY for a trully sparse voxel
                                    real,    // The Y contant Value to fill with - DUMMY for a trully sparse voxel
                                    real,    // The Z contant Value to fill with - DUMMY for a trully sparse voxel
                                    real,    // Origin X
                                    real,    // Origin Y
                                    real,    // Origin Z
                                    VV,      // Cell Sizes X
                                    VV,      // Cell Sizes Y
                                    VV,      // Cell Sizes Z
                                    IPJ      // Projection
                                    );


//-----------------------------------------------------------------------------------------------------------
// ExportToVoxel_MULTIVOXSET   Exports a Multi-Voxset into a Voxel
//
// Returns                     Nothing
//
// Available                   9.3.0
//

[_public] void
ExportToVoxel_MULTIVOXSET (
                           string,  // Project file
                           string,  // Multi-Voxset UUID
                           string,  // Multi-Voxset attribute
                           string   // Output Voxel file
                           );


//-----------------------------------------------------------------------------------------------------------
// ImportFromVoxel_MULTIVOXSET   Import a Voxel directly into a Multi-Voxset
//
// Returns                       Nothing
//
// Available                     9.3.0
//

[_public] void
ImportFromVoxel_MULTIVOXSET (
                             string,      // Project file
                             string,      // Input Voxel file
                             string,      // Multi-Voxset attribute
                             var string,  // UUID string returned
                             int          // Size of UUID string
                             );

#define mportFromVoxel_MULTIVOXSET(A, B, C, D) ImportFromVoxel_MULTIVOXSET(A, B, C, D, sizeof(D))


//-----------------------------------------------------------------------------------------------------------
// ImportFromDATAMINE_MULTIVOXSET   Create a Geosoft Voxel file from a Datamine block model file.
//
// Returns                          Nothing
//
// Notes                            Create a Geosoft Voxel file from a Datamine block model file.
//
// Available                        9.3.0
//

[_licensed] void
ImportFromDATAMINE_MULTIVOXSET (
                                string,  // Datamine file name
                                string,  // Field to use for data
                                IPJ,     // Projection to set
                                string   // Output voxel file name
                                );


//-----------------------------------------------------------------------------------------------------------
// rComputeDefaultCellSize_MULTIVOXSET   Used if the user does not provide a default cell size.
//
// Returns                               Default Cell Size
//
// Notes                                 Compute a default cell size for a voxel given a data range.
//
// Available                             9.3.0
//

[_licensed] real
rComputeDefaultCellSize_MULTIVOXSET (
                                     real,  // MinX
                                     real,  // MaxX
                                     real,  // MinY
                                     real,  // MaxY
                                     real,  // MinZ
                                     real   // MaxZ
                                     );


//-----------------------------------------------------------------------------------------------------------
// Filter_MULTIVOXSET   Apply a 3D filter to a voxel.
//
// Returns              Nothing
//
// Available            9.3.0
//

[_licensed] void
Filter_MULTIVOXSET (
                    string,  // Name of the input voxel
                    string,  // Name of the output voxel
                    int,     // <define>FILTER3D</define>
                    string,  // filter file, if filter is VOX_FILTER3D_FILE
                    int,     // number of filter passes
                    int      // (1: interpolate dummies)
                    );


//-----------------------------------------------------------------------------------------------------------
// GridDirectFromGDB_MULTIVOXSET   Create a voxel using direct gridding.
//
// Returns                         Nothing
//
// Notes                           The Z and Data channels may be array channels. If they are, the array sizes must match.
//
// Available                       9.3.0
//

[_licensed] void
GridDirectFromGDB_MULTIVOXSET (
                               string,   // Output voxel filename
                               real,     // Voxel origin X
                               real,     // Voxel origin Y
                               real,     // Voxel origin Z
                               int,      // Voxel cell count X
                               int,      // Voxel cell count Y
                               int,      // Voxel cell count Z
                               real,     // Voxel cell size X
                               real,     // Voxel cell size Y
                               real,     // Voxel cell size Z
                               int,      // <define>MULTIVOXSET_DIRECTGRID_METHOD</define>
                               DB,       // Database
                               DB_SYMB,  // X channel [DB_LOCK_READONLY]
                               DB_SYMB,  // Y channel [DB_LOCK_READONLY]
                               DB_SYMB,  // Z channel [DB_LOCK_READONLY]
                               DB_SYMB   // Data channel [DB_LOCK_READONLY]
                               );





#endif

