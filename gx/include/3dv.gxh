//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// 
// TODO...
// 
//
//-----------------------------------------------------------------------------------------------------------



#ifndef H3DV_GXH_DEFINED
#define H3DV_GXH_DEFINED

//===========================================================================================================
//
// Define	GEO3DV_OPEN
//
// Open Modes
//
// GEO3DV_MVIEW_READ
// GEO3DV_MVIEW_WRITEOLD
//
//===========================================================================================================

#define GEO3DV_MVIEW_READ        0
#define GEO3DV_MVIEW_WRITEOLD    2


//-----------------------------------------------------------------------------------------------------------
// OpenMVIEW_3DV   Open 3DV's 3D MVIEW
//
// Returns         MVIEW, aborts on failure
//
// Available       8.0.0
//

[_public] MVIEW
OpenMVIEW_3DV (
               H3DV,  // 3DV Object
               int    // <define>GEO3DV_OPEN</define>
               );


//-----------------------------------------------------------------------------------------------------------
// ICopyToMAP_3DV   Copy the 3DV's 3D MVIEW into a map.
//
// Returns          nothing
//
// Notes            
//                  A 3DV packs all source files. This functions creates an unpacked map and
//                  unpacks the packed files in the same way that UnPackFilesEx in the MAP class does.
//                  
//
// Available        8.0.0
//

[_public] void
ICopyToMAP_3DV (
                H3DV,        // 3DV Object
                MAP,         // MAP Object
                string,      // Desired new view name
                real,        // X minimum in mm
                real,        // Y minimun in mm
                real,        // X maximum in mm
                real,        // Y maximum in mm
                int,         // (0 - Produce errors for conflicting unpacked files, 1 - Force overwrites of conflicting unpacked files)
                var string,  // New view name created
                int,         // Length of new view name
                var string,  // List of files that are problematic returned
                int          // Length of problematic files buffer
                );

#define CopyToMAP_3DV(A, B, C, D, E, F, G, H, I, J) ICopyToMAP_3DV(A, B, C, D, E, F, G, H, I, sizeof(I), J, sizeof(J))


//-----------------------------------------------------------------------------------------------------------
// CreateNew_3DV   Create a new 3DV.
//
// Returns         3DV Object
//
// Available       8.0.0
//

[_public] H3DV
CreateNew_3DV (
               string,  // 3DV file name
               MVIEW    // 3D MVIEW to create new 3DV from
               );


//-----------------------------------------------------------------------------------------------------------
// Open_3DV   Open an existing 3DV.
//
// Returns    3DV Object
//
// Available  8.0.0
//

[_public] H3DV
Open_3DV (
          string   // 3DV file name
          );


//-----------------------------------------------------------------------------------------------------------
// FromMap_3DV   Get an 3DV from MAP handle (e.g. from Lock_EMAP on open geosoft_3dv document in project)
//
// Returns       3DV Object
//
// Available     9.2.0
//

[_public] H3DV
FromMap_3DV (
             MAP   // MAP Object
             );


//-----------------------------------------------------------------------------------------------------------
// CRC3DV_3DV   Generate an XML CRC of a 3DV
//
// Returns      Nothing
//
// Available    8.0.0
//

[_public] void
CRC3DV_3DV (
            H3DV,     // 3DV object
            var int,  // CRC returned
            string    // Name of xml to generate (.zip added)
            );





#endif

