//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// This library is not a class. Use the UNC library functions
// to work with Unicode characters and strings. Since version 6.2
// all strings are represented internally in the the GX engine
// as UTF-8. The character set concept was discarded as a way to
// work with characters that does not fall within the normal
// ASCII range 0x01-0x7F. The utilities here aids with any new
// functionality that is now possible (e.g. an expanded symbol range
// with TrueType fonts).
//
//-----------------------------------------------------------------------------------------------------------



#ifndef UNC_GXH_DEFINED
#define UNC_GXH_DEFINED

//===========================================================================================================
//
// Define	UTF8
//
// UTF-8 Defines
//
// UTF8_MAX_CHAR   Maximum width of a single Unicode code point as a UTF8 string, including terminator (5)
//
//===========================================================================================================

#define UTF8_MAX_CHAR    5


//===========================================================================================================
// Group UTF
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// iIsValidUTF16Char_UNC   Check if the UTF-16 value is a valid Unicode character code point.
//
// Returns                 <define>GEO_BOOL</define>
//
// Available               6.2.0
//

[_public] int
iIsValidUTF16Char_UNC (
                       int   // UTF-16 value (32-bit int, lower 16 bits used, upper bits reserved for future use)
                       );


//-----------------------------------------------------------------------------------------------------------
// iValidSymbol_UNC   See if a Symbol number is valid in a particular font.
//
// Returns            <define>GEO_BOOL</define>
//
// Available          6.2.0
//

[_public] int
iValidSymbol_UNC (
                  string,  // Face name (undecorated)
                  int,     // Geosoft font? <define>GEO_BOOL</define>
                  int      // symbol number
                  );


//-----------------------------------------------------------------------------------------------------------
// UTF16ValToSTR_UNC   Convert a UTF-16 value to a UTF-8 encoded string.
//
// Returns             Nothing
//
// Notes               An empty string will be returned for invalid symbols
//
// Available           6.2.0
//

[_public] void
UTF16ValToSTR_UNC (
                   int,         // UTF-16 value (32-bit int, lower 16 bits used, upper bits reserved for future use)
                   var string,  // Converted string
                   int          // <define>UTF8</define> Size of string.
                   );

#define _UTF16ValToSTR_UNC(A, B) UTF16ValToSTR_UNC(A, B, sizeof(B))


//-----------------------------------------------------------------------------------------------------------
// ValidateSymbols_UNC   High performance method to see if a set of symbols
//                       are valid in a particular font.
//
// Returns               Nothing
//
// Notes                 Invalid symbols in the VV will be set to -1 by this call. VV has to be of type GS_LONG.
//
// Available             6.2.0
//

[_public] void
ValidateSymbols_UNC (
                     VV,      // VV of symbols
                     string,  // Face name (undecorated)
                     int      // Geosoft font? <define>GEO_BOOL</define>
                     );





#endif

