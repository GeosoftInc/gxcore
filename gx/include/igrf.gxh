//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// 
// International Geomagnetic Reference Field
// Methods to work with IGRF objects. The IGRF object
// contains data for the IGRF model of the geomagnetic
// reference field.
// 
//
//-----------------------------------------------------------------------------------------------------------



#ifndef IGRF_GXH_DEFINED
#define IGRF_GXH_DEFINED

//-----------------------------------------------------------------------------------------------------------
// Calc_IGRF   Calculate IGRF data for a given IGRF model.
//
// Returns     Nothing
//
// Notes       
//             Calculate IGRF data (total field, inclination, and declination)
//             for a given IGRF model. The model used will be the same as that
//             obtained with Create_IGRF.
//             
//
// Available   5.0.0
//

[_licensed] void
Calc_IGRF (
           IGRF,      // IGRF model
           real,      // Elevation (metres)
           real,      // Longitude (-180 to 180)
           real,      // Latitude  (-90 to 90) Returns
           var real,  // Field strength
           var real,  // Field inclination
           var real   // Field declination
           );


//-----------------------------------------------------------------------------------------------------------
// CalcVV_IGRF   Calculate IGRF data VV's for a given IGRF model.
//
// Returns       Nothing
//
// Notes         
//               Calculate IGRF data (total field, inclination, and declination)
//               for a given IGRF model. The model used will be the same as that
//               obtained with Create_IGRF.
//               All of the VV's should be the same length. The function
//               will abort if they are not.
//               
//               No assumption is made on what data types are contained by
//               any of the VV's. However, all total field, inclination, and
//               declination values are internally calculated as real data.
//               These values will be converted to the types contained in the
//               output VV's.
//               
//
// Available     5.0.0
//

[_licensed] void
CalcVV_IGRF (
             IGRF,  // IGRF model
             VV,    // Input elevation data (metres)
             VV,    // Input longitude data (-180 to 180)
             VV,    // Input latitude data  (-90 to 90)
             VV,    // Output total field
             VV,    // Output inclination
             VV     // Output declination
             );


//-----------------------------------------------------------------------------------------------------------
// Create_IGRF   Create an IGRF.
//
// Returns       IGRF Object
//
// Notes         
//               If the year of the IGRF model is dummy, then
//               the IGRF year nearest to the line's date will
//               be used. Otherwise, the specified year is used.
//               
//
// Available     5.0.0
//

[_licensed] IGRF
Create_IGRF (
             real,    // Date required
             int,     // Year of the IGRF model to use
             string   // Name of the IGRF reference data file
             );


//-----------------------------------------------------------------------------------------------------------
// DateRange_IGRF   Determine the range of years covered by an IGRF or DGRF file
//
// Returns          Nothing
//
// Notes            
//                  This is useful when using a DGRF file, because the system is set
//                  up only to calculate for years within the date range, and will
//                  return an error otherwise.
//                  
//
// Available        6.1.0
//

[_licensed] void
DateRange_IGRF (
                string,    // Model data file name
                var real,  // Minimum year  (rMAX if none found)
                var real   // Maximum year  (rMIN if none found)
                );


//-----------------------------------------------------------------------------------------------------------
// Destroy_IGRF   Destroy an IGRF
//
// Returns        Nothing
//
// Available      5.0.0
//

[_public] void
Destroy_IGRF (
              IGRF   // IGRF to destroy.
              );





#endif

