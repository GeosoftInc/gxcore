//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// The SHP class is used to create ESRI shape files.
//
//-----------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------
// Notes
//
// Shape files contain a single "geometry" type, e.g.
// points, arcs or polygons. They may be accompanied by
// a DBF file containing attribute data.
//
//-----------------------------------------------------------------------------------------------------------



#ifndef SHP_GXH_DEFINED
#define SHP_GXH_DEFINED

//===========================================================================================================
//
// Define	SHP_GEOM_TYPE
//
// Shape file geometry types
//
// SHP_GEOM_TYPE_POINT      Single (X, Y) point
// SHP_GEOM_TYPE_ARC        Arc (polyline) multiple (X, Y) points.
// SHP_GEOM_TYPE_POLYGON    Polygon. Multiple (X, Y) points.
// SHP_GEOM_TYPE_POINTZ     Single (X, Y, Z) point
// SHP_GEOM_TYPE_ARCZ       Arc (polyline) multiple (X, Y, Z) points.
// SHP_GEOM_TYPE_POLYGONZ   Polygon. Multiple (X, Y, Z) points.
//
//===========================================================================================================

#define SHP_GEOM_TYPE_POINT       1
#define SHP_GEOM_TYPE_ARC         3
#define SHP_GEOM_TYPE_POLYGON     5
#define SHP_GEOM_TYPE_POINTZ      11
#define SHP_GEOM_TYPE_ARCZ        13
#define SHP_GEOM_TYPE_POLYGONZ    15


//-----------------------------------------------------------------------------------------------------------
// AppendItem_SHP   Append the current item and data to an old SHP object.
//
// Returns          Nothing
//
// Notes            The currently stored SHP item and data are written to the
//                  SHP geometry and data files. (If no data fields have been
//                  defined, then the data file is not written).
//
// Available        7.2.0
//

[_public] void
AppendItem_SHP (
                SHP   // SHP object
                );


//-----------------------------------------------------------------------------------------------------------
// Create_SHP   Create a new SHP object
//
// Returns      SHP object
//
// Notes        The file name is used to create the various files. The
//              file type and extension are added:
//              
//              e.g. "filename.shp",
//              "filename.dbf"
//              
//              The following geometry types are currently supported:
//              
//              Type                    Required geometry function.
//              
//              SHP_GEOM_TYPE_POINT     SetPoint_SHP
//              SHP_GEOM_TYPE_ARC       SetArc_SHP
//              SHP_GEOM_TYPE_POLYGON   SetPolygon_SHP
//              
//              SHP_GEOM_TYPE_POINTZ    SetPointZ_SHP
//              SHP_GEOM_TYPE_ARCZ      SetArcZ_SHP
//              SHP_GEOM_TYPE_POLYGONZ  SetPolygonZ_SHP
//
// Available    6.3.0
//

[_public] SHP
Create_SHP (
            string,  // File name
            int      // <define>SHP_GEOM_TYPE</define>
            );


//-----------------------------------------------------------------------------------------------------------
// Destroy_SHP   Destroy SHP object
//
// Returns       Nothing
//
// Available     6.3.0
//

[_public] void
Destroy_SHP (
             SHP   // SHP object
             );


//-----------------------------------------------------------------------------------------------------------
// iAddIntField_SHP   Add an INT type data field to a shape file
//
// Returns            Index of the new field
//
// Notes              The returned field index should be used with the SetXXX_SHP
//                    functions to set individual data values.
//
// Available          6.3.0
//

[_public] int
iAddIntField_SHP (
                  SHP,     // SHP object
                  string   // Field name
                  );


//-----------------------------------------------------------------------------------------------------------
// iAddRealField_SHP   Add a REAL type data field to a shape file
//
// Returns             Index of the new field
//
// Notes               The returned field index should be used with the SetXXX_SHP
//                     functions to set individual data values.
//
// Available           6.3.0
//

[_public] int
iAddRealField_SHP (
                   SHP,     // SHP object
                   string,  // Field name
                   int      // Number of decimal places
                   );


//-----------------------------------------------------------------------------------------------------------
// iAddStringField_SHP   Add a string type data field to a shape file
//
// Returns               Index of the new field
//
// Notes                 The returned field index should be used with the SetXXX_SHP
//                       functions to set individual data values.
//
// Available             6.3.0
//

[_public] int
iAddStringField_SHP (
                     SHP,     // SHP object
                     string,  // Field name
                     int      // Maximum number of characters in the string
                     );


//-----------------------------------------------------------------------------------------------------------
// iFindField_SHP   Find the index for a data field.
//
// Returns          The index, -1 if not found.
//
// Available        6.3.0
//

[_public] int
iFindField_SHP (
                SHP,     // SHP object
                string   // Field name
                );


//-----------------------------------------------------------------------------------------------------------
// iMaxIDNum_SHP   Get the max ID number.
//
// Returns         The max ID number.
//
// Available       7.2.0
//

[_public] int
iMaxIDNum_SHP (
               SHP   // SHP object
               );


//-----------------------------------------------------------------------------------------------------------
// iNumFields_SHP   Get the field number.
//
// Returns          The field number.
//
// Available        7.2.0
//

[_public] int
iNumFields_SHP (
                SHP   // SHP object
                );


//-----------------------------------------------------------------------------------------------------------
// iNumRecords_SHP   Get the record number.
//
// Returns           The record number.
//
// Available         7.2.0
//

[_public] int
iNumRecords_SHP (
                 SHP   // SHP object
                 );


//-----------------------------------------------------------------------------------------------------------
// iType_SHP   Get the SHP object's geometry type.
//
// Returns     The SHP object's geometry type (<define>SHP_GEOM_TYPE</define>)
//
// Available   7.2.0
//

[_public] int
iType_SHP (
           SHP   // SHP object
           );


//-----------------------------------------------------------------------------------------------------------
// Open_SHP   Open an old SHP object
//
// Returns    SHP object
//
// Available  7.2.0
//

[_public] SHP
Open_SHP (
          string   // File name
          );


//-----------------------------------------------------------------------------------------------------------
// SetArc_SHP   Write an XY arc (polyline) item.
//
// Returns      Nothing
//
// Notes        Can ONLY be used for SHP_GEOM_TYPE_ARC files.
//
// Available    6.3.0
//

[_public] void
SetArc_SHP (
            SHP,  // SHP object
            VV,   // X locations
            VV    // Y locations
            );


//-----------------------------------------------------------------------------------------------------------
// SetArcZ_SHP   Write an XYZ arc (polyline) item.
//
// Returns       Nothing
//
// Notes         Can ONLY be used for SHP_GEOM_TYPE_ARCZ files.
//
// Available     6.3.0
//

[_public] void
SetArcZ_SHP (
             SHP,  // SHP object
             VV,   // X locations
             VV,   // Y locations
             VV    // Z locations
             );


//-----------------------------------------------------------------------------------------------------------
// SetInt_SHP   Set a data value to a int.
//
// Returns      Nothing
//
// Notes        The input value is converted to the field's data type.
//
// Available    6.3.0
//

[_public] void
SetInt_SHP (
            SHP,  // SHP object
            int,  // Data field index
            int   // Input int value
            );


//-----------------------------------------------------------------------------------------------------------
// SetIPJ_SHP   Set a SHP object's projection.
//
// Returns      Nothing
//
// Notes        If the SHP object has a projection, and it
//              is not IPJ_TYPE_NONE, then it will be output
//              to a file with the .prj extension when the
//              first object is output.
//              This function should be called BEFORE the first
//              object is written.
//
// Available    6.3.0
//

[_public] void
SetIPJ_SHP (
            SHP,  // SHP object
            IPJ   // Input IPJ
            );


//-----------------------------------------------------------------------------------------------------------
// SetPoint_SHP   Write an XY point item.
//
// Returns        Nothing
//
// Notes          Can ONLY be used for SHP_GEOM_TYPE_POINT files.
//
// Available      6.3.0
//

[_public] void
SetPoint_SHP (
              SHP,   // SHP object
              real,  // X location
              real   // Y location
              );


//-----------------------------------------------------------------------------------------------------------
// SetPointZ_SHP   Write an XYZ point item.
//
// Returns         Nothing
//
// Notes           Can ONLY be used for SHP_GEOM_TYPE_POINTZ files.
//
// Available       6.3.0
//

[_public] void
SetPointZ_SHP (
               SHP,   // SHP object
               real,  // X location
               real,  // Y location
               real   // Z location
               );


//-----------------------------------------------------------------------------------------------------------
// SetPolygon_SHP   Write an XY polygon item.
//
// Returns          Nothing
//
// Notes            Can ONLY be used for SHP_GEOM_TYPE_POLYGON files.
//
// Available        6.3.0
//

[_public] void
SetPolygon_SHP (
                SHP,  // SHP object
                VV,   // X locations
                VV,   // Y locations
                int   // <define>GEO_BOOL</define> GS_TRUE for outer ring polygon (inclusive/island), GS_FALSE for inner ring (exclusive/hole)
                );


//-----------------------------------------------------------------------------------------------------------
// SetPolygonZ_SHP   Write an XYZ polygon item.
//
// Returns           Nothing
//
// Notes             Can ONLY be used for SHP_GEOM_TYPE_POLYGONZ files.
//
// Available         6.3.0
//

[_public] void
SetPolygonZ_SHP (
                 SHP,  // SHP object
                 VV,   // X locations
                 VV,   // Y locations
                 VV,   // Z locations
                 int   // <define>GEO_BOOL</define> GS_TRUE for outer ring polygon (inclusive/island), GS_FALSE for inner ring (exclusive/hole)
                 );


//-----------------------------------------------------------------------------------------------------------
// SetReal_SHP   Set a data value to a real.
//
// Returns       Nothing
//
// Notes         The input value is converted to the field's data type.
//
// Available     6.3.0
//

[_public] void
SetReal_SHP (
             SHP,   // SHP object
             int,   // Data field index
             real   // Input real value
             );


//-----------------------------------------------------------------------------------------------------------
// SetString_SHP   Set a data value to a string.
//
// Returns         Nothing
//
// Notes           The input string is converted to the field's data type.
//
// Available       6.3.0
//

[_public] void
SetString_SHP (
               SHP,     // SHP object
               int,     // Data field index
               string   // Input string value
               );


//-----------------------------------------------------------------------------------------------------------
// WriteItem_SHP   Output the current item and data.
//
// Returns         Nothing
//
// Notes           The currently stored SHP item and data are written to the
//                 SHP geometry and data files. (If no data fields have been
//                 defined, then the data file is not written).
//
// Available       6.3.0
//

[_public] void
WriteItem_SHP (
               SHP   // SHP object
               );





#endif

