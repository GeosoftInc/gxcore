//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// CHIMERA GX function library.
//
//-----------------------------------------------------------------------------------------------------------



#ifndef CHIMERA_GXH_DEFINED
#define CHIMERA_GXH_DEFINED

//===========================================================================================================
//
// Define	CHIMERA_MAX_CHAN
//
// Maximum channels in Chimera database
//
// CHIMERA_MAX_CHAN
//
//===========================================================================================================

#define CHIMERA_MAX_CHAN    128


//===========================================================================================================
//
// Define	CHIMERA_PLOT
//
// Chimera plot type
//
// CHIMERA_PLOT_ROSE
// CHIMERA_PLOT_PIE
// CHIMERA_PLOT_BAR
//
//===========================================================================================================

#define CHIMERA_PLOT_ROSE    0
#define CHIMERA_PLOT_PIE     1
#define CHIMERA_PLOT_BAR     2


//-----------------------------------------------------------------------------------------------------------
// BarPlot_CHIMERA   Plot a Bar plot of up to 8 channels.
//
// Returns           Nothing
//
// Notes             The number of channels is taken from the Data handles VV.
//                   Plots a bar plot with the center of the "X" axis at the symbol location.
//                   See the note on offset symbols in RosePlot_CHIMERA
//
// Available         5.0.7
//

[_extended] void
BarPlot_CHIMERA (
                 MVIEW,   // View object to plot to
                 string,  // Data group name
                 string,  // Offset group name
                 VV,      // X locations
                 VV,      // Y locations
                 VV,      // Data handles, stored as INT values
                 VV,      // Colours
                 int,     // Colour for edges
                 int,     // Offset symbols (0: No, 1: Yes)
                 real,    // Offset symbol size
                 real     // Single bar width in data units.
                 );


//-----------------------------------------------------------------------------------------------------------
// CategorizeByValue_CHIMERA   Transform values to the index of input data ranges.
//
// Returns                     Nothing
//
// Notes                       A list of minima (e.g.  M1, M2, M3, M4, M5) is input.
//                             A list of values V is input and transformed to outputs N in the following manner:
//                             
//                             if(V) >= M5) N = 5
//                             else if(V) >= M4) N = 4
//                             ...
//                             ...
//                             else if(V) >= M1) N = 1
//                             else N = 0
//
// Available                   6.1.0
//

[_extended] void
CategorizeByValue_CHIMERA (
                           VV,  // Input range minima
                           VV,  // Input data VV.      (REAL)
                           VV   // Output (altered) VV.(REAL)
                           );


//-----------------------------------------------------------------------------------------------------------
// CategorizeByValueDetLimit_CHIMERA   Transform values to the index of input data ranges, with detection limit.
//
// Returns                             Nothing
//
// Notes                               Same as CategorizeByValue_CHIMERA, but if the
//                                     input value is less than the detection limit,
//                                     the output value is set to zero.
//
// Available                           6.2.0
//

[_extended] void
CategorizeByValueDetLimit_CHIMERA (
                                   VV,    // Input range minima
                                   VV,    // Input data VV.      (REAL)
                                   real,  // Detection limit (can be rDUMMY)
                                   VV     // Output (altered) VV.(REAL)
                                   );


//-----------------------------------------------------------------------------------------------------------
// ClipToDetectLimit_CHIMERA   Apply detection limit clipping of data.
//
// Returns                     Nothing
//
// Notes                       Flow:
//                             
//                             1. If auto-converting negatives, then all negative values
//                             are replaced by -0.5*value, and detection limit is ignored.
//                             
//                             2. If not auto-converting negatives, and the detection limit is not
//                             rDUMMY, then values less than the detection limit are converted to
//                             one-half the detection limit.
//
// Available                   5.0.8
//

[_extended] void
ClipToDetectLimit_CHIMERA (
                           VV,    // Input data vv (altered).
                           real,  // Detection limit
                           int    // Auto-convert negatives?
                           );


//-----------------------------------------------------------------------------------------------------------
// DrawCircleOffsetMarkers_CHIMERA   Plots location marker and joining line for circle offset symbols
//
// Returns
//
// Notes                             Draws black filled circle (symbols.gfn #7) and a joining line.
//
// Available                         5.0.7
//

[_extended] void
DrawCircleOffsetMarkers_CHIMERA (
                                 MVIEW,  // View
                                 VV,     // Original (marker) X location
                                 VV,     // Original (marker) Y location
                                 VV,     // Offset (new) X location
                                 VV,     // Offset (new) Y location
                                 real    // Marker symbol radius
                                 );


//-----------------------------------------------------------------------------------------------------------
// DrawRectangleOffsetMarkers_CHIMERA   Plots location marker and joining line for rectangle offset symbols
//
// Returns
//
// Notes                                Draws black filled circle (symbols.gfn #7) and a joining line.
//
// Available                            5.0.7
//

[_extended] void
DrawRectangleOffsetMarkers_CHIMERA (
                                    MVIEW,  // View
                                    VV,     // Original (marker) X location
                                    VV,     // Original (marker) Y location
                                    VV,     // Offset (new) X location
                                    VV,     // Offset (new) Y location
                                    real,   // Offset symbol width
                                    real,   // Offset symbol height
                                    real    // Marker symbol radius
                                    );


//-----------------------------------------------------------------------------------------------------------
// DuplicateChem_CHIMERA   Plot an ASSAY Duplicate result in a graph window.
//
// Returns                 Nothing
//
// Available               5.0.7
//

[_extended] void
DuplicateChem_CHIMERA (
                       MVIEW,   // View
                       VV,      // Duplicate data
                       int,     // log-transform: 0 - linear, 1 - log
                       real,    // Detect Limit
                       int,     // number of old samples in the VV
                       VV,      // tolerances (1-5 values)
                       string,  // Title
                       string,  // Unit
                       real,    // X location (bottom left corner of graph)
                       real,    // Y location
                       real,    // graph width
                       real     // graph height
                       );


//-----------------------------------------------------------------------------------------------------------
// DuplicateChemView_CHIMERA   Plot an ASSAY Duplicate result in a new view.
//
// Returns                     Nothing
//
// Available                   8.3.0
//

[_extended] void
DuplicateChemView_CHIMERA (
                           MAP,       // Map
                           string,    // New view name
                           string,    // New group name
                           IPJ,       // IPJ
                           VV,        // Duplicate data
                           int,       // log-transform: 0 - linear, 1 - log
                           real,      // Detect Limit
                           int,       // number of old samples in the VV
                           VV,        // tolerances (1-5 values)
                           string,    // Title
                           string,    // Unit
                           VV,        // VV X
                           VV,        // VV Line
                           VV,        // VV Fid
                           DB,        // Database
                           var real,  // Returned MinY
                           var real   // Returned MaxY
                           );


//-----------------------------------------------------------------------------------------------------------
// GetExpressionDataVV_CHIMERA   Get data from a line using a channel expression.
//
// Returns                       Nothing
//
// Notes                         Input a channel expression. Units for individual channels
//                               are stored in the input INI. Returns a VV for the given line
//                               with the calculated expression values.
//
// Available                     6.4.0
//

[_extended] void
GetExpressionDataVV_CHIMERA (
                             DB,       // Database
                             DB_SYMB,  // Line to read
                             string,   // geochem stage (just "raw data stage" for now).
                             string,   // channel expression
                             string,   // INI file name with required units (e.g. PARAMETER.CU="ppm") (optional)
                             VV        // Returned data
                             );


//-----------------------------------------------------------------------------------------------------------
// GetLithogeochemData_CHIMERA   Get all rows of non-dummy data in a database.
//
// Returns                       Nothing
//
// Notes                         This function is a quick way to get all rows
//                               of data, guaranteeing no dummy items.
//                               Book-keeping VVs returned let you easily
//                               write back results to new channels in the
//                               correct locations.
//                               Set the "Dummy Row" VV to 1 if you wish to
//                               remove any row where a value for the corresponding
//                               channel is a dummy.
//                               
//                               Transforms to apply:
//                               
//                               -1 - Channel default (will be either raw or log)
//                               0 - Raw Transform
//                               1 - Log transform: base e with log min = CHIMERA_LOG_MIN
//                               2 - Lambda transform
//
// Available                     6.2.0
//

[_extended] void
GetLithogeochemData_CHIMERA (
                             DB,       // [i] database handle
                             LST,      // [i] channels of data to get
                             DB_SYMB,  // [i] mask channel (can be NULLSYMB)
                             VV,       // [i] transforms to apply
                             int,      // [i] remove dummy rows?
                             VV,       // [i] dummy row if this channel value is dummy (0:No, 1:Yes)? Effective only if "remove dummy rows" value is TRUE
                             int,      // [i] warn if rows removed because of dummy data items?
                             VV,       // [o] (INT) returned data - one VV handle per channel
                             VV,       // [o] line symbols selected
                             VV,       // [o] number of original data items in each line
                             VV,       // [o] number of non-dummy rows
                             VV,       // [o] indices into original data
                             VV,       // [o] Fid Starts (REAL)
                             VV        // [o] Fid Increments (REAL)
                             );


//-----------------------------------------------------------------------------------------------------------
// GetTransform_CHIMERA   Get channel transform options and lambda values.
//
// Returns                Nothing
//
// Notes                  If the lambda transform is requested, the channel
//                        must have the lambda value defined.
//                        
//                        Input Transform options
//                        
//                        -1 - Channel default (will be either raw or log)
//                        0 - Raw Transform
//                        1 - Log transform: base e with log min = CHIMERA_LOG_MIN
//                        2 - Lambda transform
//
// Available              6.2.0
//

[_extended] void
GetTransform_CHIMERA (
                      DB,        // DB handle
                      string,    // Channel name
                      int,       // Transform option: -1, 0, 1 or 2
                      var int,   // returned transform used
                      var real   // returned lambda value for option==2
                      );


//-----------------------------------------------------------------------------------------------------------
// iIsAcquireChan_CHIMERA   Is this channel in acQuire format (e.g. "Ag_ppm_4AWR")
//
// Returns                  <define>GEO_BOOL</define>
//
// Notes                    Expressions can take acQuire-type named channels
//                          if the exact element/oxide is not found. This function
//                          extracts the channel name, and units from an acQuire-formatted
//                          channel name.
//
// Available                7.2.0
//

[_extended] int
iIsAcquireChan_CHIMERA (
                        string,      // string to test
                        var string,  // returned channel name
                        int,         // buffer size for channel name
                        var string,  // returned units
                        int,         // buffer size for units
                        var real,    // units factor (e.g. ppm = 1.e-6)
                        var int      // <define>GEO_BOOL</define> is this an oxide?
                        );

#define isAcquireChan_CHIMERA(A, B, C, D, E) iIsAcquireChan_CHIMERA(A, B, sizeof(B), C, sizeof(C), D, E)


//-----------------------------------------------------------------------------------------------------------
// iIsElement_CHIMERA   Tests a string to see if it is an element symbol
//
// Returns              <define>GEO_BOOL</define>
//
// Notes                Suggested use - testing to see if a channel name is an
//                      element so that the "ASSAY" class can be set.
//
// Available            5.0.7
//

[_extended] int
iIsElement_CHIMERA (
                    string,  // string to test
                    int      // <define>STR_CASE</define>
                    );


//-----------------------------------------------------------------------------------------------------------
// LaunchHistogram_CHIMERA   Launch histogram tool on a database.
//
// Returns                   Nothing
//
// Notes                     The database should be a currently open database.
//                           This function supercedes LaunchHistogram_EDB, (which now
//                           just gets the name of the EDB and calls this function).
//
// Available                 5.0.6
//

[_extended] void
LaunchHistogram_CHIMERA (
                         string,  // Database name
                         string   // First chan name
                         );


//-----------------------------------------------------------------------------------------------------------
// LaunchProbability_CHIMERA   Launch probability tool on a database.
//
// Returns                     Nothing
//
// Notes                       The database should be a currently open database.
//
// Available                   5.1.8
//

[_extended] void
LaunchProbability_CHIMERA (
                           string,  // Database name
                           string   // First chan name
                           );


//-----------------------------------------------------------------------------------------------------------
// LaunchScatter_CHIMERA   Launch scatter tool on a database.
//
// Returns                 Nothing
//
// Notes                   The scatter tool uses the following INI parameters
//                         
//                         SCATTER.STM       name of the scatter template,"none" for none
//                         SCATTER.STM_NAME  name of last template section, "" for none.
//                         SCATTER.X         name of channel to display in X
//                         SCATTER.Y         name of channel to display in Y
//                         SCATTER.MASK      name of channel to use for mask
//                         
//                         The database should be a currently open database.
//                         This function supercedes LaunchScatter_EDB, (which now
//                         just gets the name of the EDB and calls this function).
//
// Available               5.0.6
//

[_extended] void
LaunchScatter_CHIMERA (
                       string   // Database name
                       );


//-----------------------------------------------------------------------------------------------------------
// LaunchTriplot_CHIMERA   Launch Triplot tool on a database.
//
// Returns                 Nothing
//
// Notes                   The Triplot tool uses the following INI parameters
//                         
//                         TRIPLOT.TTM       name of the triplot template,"none" for none
//                         TRIPLOT.TTM_NAME  name of last template section, "" for none.
//                         TRIPLOT.X         name of channel to display in X
//                         TRIPLOT.Y         name of channel to display in Y
//                         TRIPLOT.Z         name of channel to display in Z
//                         TRIPLOT.MASK      name of channel to use for mask
//                         
//                         The database should be a currently open database.
//
// Available               5.0.7
//

[_extended] void
LaunchTriplot_CHIMERA (
                       string   // Database name
                       );


//-----------------------------------------------------------------------------------------------------------
// MaskChanLST_CHIMERA   Load a LST with mask channels.
//
// Returns               Nothing
//
// Notes                 Loads a LST with all channels with CLASS "MASK", as well
//                       as all channels containing the string "MASK", as long
//                       as the CLASS for these channels is not set to something
//                       other than "" or "MASK".
//                       
//                       This function has been duplicated by MaskChanLST_DB, which
//                       is safe to use in applications which do not have CHIMERA loaded.
//
// Available             5.0.7
//

[_extended] void
MaskChanLST_CHIMERA (
                     DB,   // hDB - Database Object
                     LST   // LST object to populate
                     );


//-----------------------------------------------------------------------------------------------------------
// OrderedChannelLST_CHIMERA   Fill a list with the channels in the preferred order.
//
// Returns                     Nothing
//
// Notes                       Loads a LST with all channels in the preferred order:
//                             
//                             First:  Sample, E, N, assay channels,
//                             Middle: Data from survey (other channels),
//                             Last:   Duplicate, Standard, Chemmask (and other masks), weight, lab, batch
//                             
//                             If the input LST object has values, it is used as the channel LST,
//                             otherwise, get all the database channels. (This allows you to pass in
//                             the currently displayed channels and only reload those).
//
// Available                   5.1.8
//

[_extended] void
OrderedChannelLST_CHIMERA (
                           DB,   // hDB - Database Object
                           LST   // LST object to populate [recommended 2*STR_DB_SYMBOL]
                           );


//-----------------------------------------------------------------------------------------------------------
// PiePlot_CHIMERA   Plot a Pie plot of up to 8 channels.
//
// Returns           Nothing
//
// Notes             The number of channels is taken from the Data handles VV.
//                   The values in each data VV are summed and the pie arc is
//                   is given by the percent contribution of each consituent.
//                   See the note on offset symbols in RosePlot_CHIMERA
//
// Available         5.0.7
//

[_extended] void
PiePlot_CHIMERA (
                 MVIEW,   // View object to plot to
                 string,  // Data group name
                 string,  // Offset group name
                 VV,      // X locations
                 VV,      // Y locations
                 VV,      // Data handles, stored as INT values
                 VV,      // Colours
                 int,     // Colour for edges
                 int,     // Offset symbols (0: No, 1: Yes)
                 real,    // Offset symbol size
                 real     // Pie plot radius in data units.
                 );


//-----------------------------------------------------------------------------------------------------------
// PiePlot2_CHIMERA   Same as PiePlot_CHIMERA, with a starting angle.
//
// Returns            Nothing
//
// Notes              The starting angle is the location of the edge of the first pie
//                    slice, counted in degrees counter-clockwise from horizontal
//                    (3 o'clock). Zero degrees gives the same plot as PiePlot_CHIMERA.
//
// Available          5.1.5
//

[_extended] void
PiePlot2_CHIMERA (
                  MVIEW,   // View object to plot to
                  string,  // Data group name
                  string,  // Offset group name
                  VV,      // X locations
                  VV,      // Y locations
                  VV,      // Data handles, stored as INT values
                  VV,      // Colours
                  int,     // Colour for edges
                  int,     // Offset symbols (0: No, 1: Yes)
                  real,    // Offset symbol size
                  real,    // Pie plot radius in data units.
                  real     // Starting angle in degrees CCW from horizontal (rDUMMY gives 0.0)
                  );


//-----------------------------------------------------------------------------------------------------------
// PlotStringClassifiedSymbolsLegendFromClassFile_CHIMERA   Plot legend for the string classified symbols
//
// Returns                                                  Nothing
//
// Notes                                                    
//                                                          Plot in a legend the classes in the class file found in the input class indices.
//                                                          
//
// Available                                                8.0.1
//

[_extended] void
PlotStringClassifiedSymbolsLegendFromClassFile_CHIMERA (
                                                        MVIEW,   // Map view object
                                                        string,  // title
                                                        real,    // left side X location
                                                        real,    // bottom Y bound
                                                        real,    // top Y bound
                                                        string,  // Class file name (TPAT)
                                                        VV       // Class indices  (INT VV)
                                                        );


//-----------------------------------------------------------------------------------------------------------
// rAtomicWeight_CHIMERA   Return the atomic weight of a particular element.
//
// Returns                 The atomic weight of the given element.
//
// Notes                   If the input string is not an element symbol (elements in the range
//                         1-92, "H" to "U"), then returns a dummy (GS_R8DM).
//
// Available               6.4.2
//

[_extended] real
rAtomicWeight_CHIMERA (
                       string   // element name (case insensitive)
                       );


//-----------------------------------------------------------------------------------------------------------
// RosePlot_CHIMERA   Plot a Rose plot of up to 8 channels.
//
// Returns            Nothing
//
// Notes              The number of channels is taken from the Data handles VV.
//                    The values in each data VV give the radius, in view units,
//                    of the sector arc to plots. Values <=0 or dummies are not
//                    plotted.
//                    
//                    Offset symbols: When selected, the symbols plot without
//                    overlap, away from the original locations. The original
//                    location is marked with a small symbol and a line joins the
//                    original position and the relocated symbol.
//                    Care should be taken when choosing the symbol size, because
//                    if the point density is too high, all the points will get
//                    pushed to the outside edge and your plot will look like a
//                    hedgehog (it also takes a lot longer!).
//
// Available          5.0.7
//

[_extended] void
RosePlot_CHIMERA (
                  MVIEW,   // View object to plot to
                  string,  // Data group name
                  string,  // Offset group name
                  VV,      // X locations
                  VV,      // Y locations
                  VV,      // Data handles, stored as INT values
                  VV,      // Colours
                  int,     // Colour for edges
                  int,     // Offset symbols (0: No, 1: Yes)
                  real     // Offset symbol size
                  );


//-----------------------------------------------------------------------------------------------------------
// RosePlot2_CHIMERA   Same as RosePlot_CHIMERA, with a starting angle.
//
// Returns             Nothing
//
// Notes               The starting angle is the location of the edge of the first pie
//                     slice, counted in degrees counter-clockwise from horizontal
//                     (3 o'clock). Zero degrees gives the same plot as RosePlot_CHIMERA.
//
// Available           5.1.5
//

[_extended] void
RosePlot2_CHIMERA (
                   MVIEW,   // View object to plot to
                   string,  // Data group name
                   string,  // Offset group name
                   VV,      // X locations
                   VV,      // Y locations
                   VV,      // Data handles, stored as INT values
                   VV,      // Colours
                   int,     // Colour for edges
                   int,     // Offset symbols (0: No, 1: Yes)
                   real,    // Offset symbol size
                   real     // Starting angle in degrees CCW from horizontal (rDUMMY gives 0.0)
                   );


//-----------------------------------------------------------------------------------------------------------
// Scatter2_CHIMERA   Plot the scatter plot on a map using symbol number, size and color VVs.
//
// Returns            Nothing
//
// Notes              
//                    The view scaling is not altered with any projection. The base view
//                    is best as the input.
//                    
//
// Available          5.0.7
//

[_extended] void
Scatter2_CHIMERA (
                  MVIEW,   // View
                  string,  // Title
                  real,    // X location (bottom left corner of box)
                  real,    // Y location
                  real,    // box width
                  real,    // box height
                  VV,      // Horizontal channel
                  VV,      // Vertical channel
                  string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                  VV,      // Symbol numbers
                  VV,      // Symbol sizes
                  VV,      // Colours  if symbol number or colour == 0, do not plot
                  int,     // Annotation style 0 - outside, 1 - inside
                  string,  // Horizontal channel name
                  string,  // Vertical channel name
                  string,  // Horizontal channel units
                  string,  // Vertical channel units
                  real,    // Min. Horizontal value, rDUMMY for default
                  real,    // Max. Horizontal value
                  real,    // Min. Vertical value
                  real,    // Max. Vertical value
                  real,    // Min. Horizontal range value
                  real,    // Max. Horizontal range value
                  real,    // Min. Vertical range value
                  real,    // Max. Vertical range value
                  int,     // Use Min Horz. Range selection?
                  int,     // Use Max Horz. Range selection?
                  int,     // Use Min Vert. Range selection?
                  int,     // Use Max Vert. Range selection?
                  int,     // horizontal axis scaling: 0 - linear, 1 - log
                  int      // vertical axis scaling
                  );


//-----------------------------------------------------------------------------------------------------------
// FixedSymbolScatterPlot_CHIMERA   
//                                  Plot a scatter plot using a single fixed symbol.
//                                  Optional data masking with masking colour.
//                                  Optioinal database linking.
//                                  
//
// Returns                          Nothing
//
// Notes                            
//                                  Plot a scatter plot using a single fixed symbol.
//                                  
//
// Available                        8.0.1
//

[_extended] void
FixedSymbolScatterPlot_CHIMERA (
                                MVIEW,   // View
                                string,  // Title
                                real,    // X location (bottom left corner of box)
                                real,    // Y location
                                real,    // box width
                                real,    // box height
                                VV,      // Horizontal channel data
                                VV,      // Vertical channel data
                                VV,      // Mask channel data (can be NULL)
                                int,     // Mask colour; overrides symbol colour where mask data is not dummy. Set to iColor_MVIEW("") to not plot.
                                string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                                int,     // Symbol number (>=0)
                                real,    // Symbol size ( >=0)
                                real,    // Symbol angle (-360 to 360)
                                int,     // Symbol colour
                                int,     // Symbol fill colour
                                DB,      // Database (source of data)
                                VV,      // Line handles for data
                                VV,      // Fid values for data
                                int,     // Annotation style 0 - outside, 1 - inside
                                string,  // Horizontal channel name
                                string,  // Vertical channel name
                                string,  // Horizontal channel units
                                string,  // Vertical channel units
                                real,    // Min. Horizontal value, rDUMMY for default
                                real,    // Max. Horizontal value
                                real,    // Min. Vertical value
                                real,    // Max. Vertical value
                                int,     // horizontal axis scaling: 0 - linear, 1 - log
                                int,     // vertical axis scaling
                                string   // plot overlay ("" for none)
                                );


//-----------------------------------------------------------------------------------------------------------
// ZoneColouredScatterPlot_CHIMERA   
//                                   Plot a scatter plot using colours based on a zone file.
//                                   Optional data masking with masking colour.
//                                   Optioinal database linking.
//                                   
//
// Returns                           Nothing
//
// Notes                             
//                                   Plot a scatter plot using colours based on a zone file.
//                                   
//
// Available                         8.0.1
//

[_extended] void
ZoneColouredScatterPlot_CHIMERA (
                                 MVIEW,   // View
                                 string,  // Title
                                 real,    // X location (bottom left corner of box)
                                 real,    // Y location
                                 real,    // box width
                                 real,    // box height
                                 VV,      // Horizontal channel data
                                 VV,      // Vertical channel data
                                 VV,      // Mask channel data (can be NULL)
                                 int,     // Mask colour; overrides symbol colour where mask data is not dummy. Set to iColor_MVIEW("") to not plot.
                                 VV,      // Zone channel data
                                 string,  // Zone file name
                                 string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                                 int,     // Symbol number (>=0)
                                 real,    // Symbol size ( >=0)
                                 real,    // Symbol angle (-360 to 360)
                                 int,     // Symbol colour
                                 int,     // Symbol fill colour
                                 int,     // Fix symbol edge colour?
                                 DB,      // Database (source of data)
                                 VV,      // Line handles for data
                                 VV,      // Fid values for data
                                 int,     // Annotation style 0 - outside, 1 - inside
                                 string,  // Horizontal channel name
                                 string,  // Vertical channel name
                                 string,  // Horizontal channel units
                                 string,  // Vertical channel units
                                 real,    // Min. Horizontal value, rDUMMY for default
                                 real,    // Max. Horizontal value
                                 real,    // Min. Vertical value
                                 real,    // Max. Vertical value
                                 int,     // horizontal axis scaling: 0 - linear, 1 - log
                                 int,     // vertical axis scaling
                                 string   // plot overlay ("" for none)
                                 );


//-----------------------------------------------------------------------------------------------------------
// StringClassifiedScatterPlot_CHIMERA   
//                                       Plot a scatter plot using symbols based on a symbol class file.
//                                       Optional data masking with masking colour.
//                                       Optioinal database linking.
//                                       
//
// Returns                               Nothing
//
// Notes                                 
//                                       Plot a scatter plot using symbols based on a symbol class file.
//                                       
//
// Available                             8.0.1
//

[_extended] void
StringClassifiedScatterPlot_CHIMERA (
                                     MVIEW,   // View
                                     string,  // Title
                                     real,    // X location (bottom left corner of box)
                                     real,    // Y location
                                     real,    // box width
                                     real,    // box height
                                     VV,      // Horizontal channel data
                                     VV,      // Vertical channel data
                                     VV,      // Mask channel data
                                     int,     // Mask colour; overrides symbol colour. Set to iColor_MVIEW("") to not plot.
                                     VV,      // Class channel data
                                     string,  // Class file (TPAT) name.
                                     real,    // Symbol size override. Set to 0.0 to use class file symbol sizes.
                                     DB,      // Database (source of data)
                                     VV,      // Line handles for data
                                     VV,      // Fid values for data
                                     int,     // Annotation style 0 - outside, 1 - inside
                                     string,  // Horizontal channel name
                                     string,  // Vertical channel name
                                     string,  // Horizontal channel units
                                     string,  // Vertical channel units
                                     real,    // Min. Horizontal value, rDUMMY for default
                                     real,    // Max. Horizontal value
                                     real,    // Min. Vertical value
                                     real,    // Max. Vertical value
                                     int,     // horizontal axis scaling: 0 - linear, 1 - log
                                     int,     // vertical axis scaling
                                     string   // plot overlay ("" for none)
                                     );


//-----------------------------------------------------------------------------------------------------------
// SetLithogeochemData_CHIMERA   Set data back into a database.
//
// Returns                       Nothing
//
// Notes                         This function would normally be called after
//                               AAGetLithogeochemData_CHIMERA to write processed values
//                               back into a database, in the correct lines,
//                               and in the correct fiducial locations wrt the
//                               other data. The book-keeping VVs would all be
//                               set up in AAGetLithogeochemData_CHIMERA.
//                               
//                               Values NOT in the data (missing indices) will
//                               be initialized to dummy if the channel is new,
//                               or if the value in the last VV below is set to 1.
//                               
//                               New channel types will be set using the data VV type.
//                               Any metadata (CLASS, display formats) should be set separately.
//
// Available                     6.2.0
//

[_extended] void
SetLithogeochemData_CHIMERA (
                             DB,   // [i] database handle
                             LST,  // [i] channels of data to set
                             VV,   // [i] (INT) input data - one VV handle per channel
                             VV,   // [i] line symbols selected
                             VV,   // [i] number of original data items in each line
                             VV,   // [i] number of non-dummy rows
                             VV,   // [i] indices into original data
                             VV,   // [i] Fid Starts (REAL)
                             VV,   // [i] Fid Increments (REAL)
                             VV    // [i] init channel values to dummies first (0:No, 1:Yes)?
                             );


//-----------------------------------------------------------------------------------------------------------
// StackedBarPlot_CHIMERA   Plot a Bar plot of up to 8 channels, bars stacked on each other
//
// Returns                  Nothing
//
// Notes                    The number of channels is taken from the Data handles VV.
//                          Plots a bar plot with the center of the "X" axis at the symbol location.
//                          See the note on offset symbols in RosePlot_CHIMERA
//
// Available                5.1.8
//

[_extended] void
StackedBarPlot_CHIMERA (
                        MVIEW,   // View object to plot to
                        string,  // Data group name
                        string,  // Offset group name
                        VV,      // X locations
                        VV,      // Y locations
                        VV,      // Data handles, stored as INT values
                        VV,      // Colours
                        int,     // Colour for edges
                        int,     // Offset symbols (0: No, 1: Yes)
                        real,    // Offset symbol size
                        real     // Single bar width in data units.
                        );


//-----------------------------------------------------------------------------------------------------------
// Standard_CHIMERA   Plot ASSAY Standard result in a graph window.
//
// Returns            Nothing
//
// Notes              If the tolerance is rDUMMY, then the minimum and maximum
//                    values are used, and must be specified.
//
// Available          5.0.7
//

[_extended] void
Standard_CHIMERA (
                  MVIEW,   // View
                  VV,      // standard data
                  int,     // number of old samples in the VV
                  real,    // tolerance as a function of std dev
                  real,    // minimum acceptable value
                  real,    // maximum acceptable value
                  string,  // Title
                  string,  // Unit
                  real,    // X location (bottom left corner of graph)
                  real,    // Y location
                  real,    // graph width
                  real     // graph height
                  );


//-----------------------------------------------------------------------------------------------------------
// StandardView_CHIMERA   Plot ASSAY Standard result in a graph window.
//
// Returns                Nothing
//
// Notes                  Same as Standard_CHIMERA but plot in a new view.
//
// Available              8.3.0
//

[_extended] void
StandardView_CHIMERA (
                      MAP,       // Map
                      string,    // New view name
                      string,    // New group name
                      IPJ,       // IPJ
                      VV,        // standard data (VV Y)
                      int,       // number of old samples in the VV
                      real,      // tolerance as a function of std dev
                      real,      // minimum acceptable value
                      real,      // maximum acceptable value
                      string,    // Title
                      string,    // Unit
                      real,      // Size X
                      VV,        // VV X
                      VV,        // VV Line
                      VV,        // VV Fid
                      DB,        // Database
                      var real,  // Returned MinY
                      var real   // Returned MaxY
                      );


//-----------------------------------------------------------------------------------------------------------
// TriPlot2_CHIMERA   Plot the TriPlot on a map using symbol number, size and color VVs.
//
// Returns            Nothing
//
// Notes              The mask channel VV is used for plotting precedence; those points with
//                    mask = dummy are plotted first, then overwritten with the non-masked
//                    values, so you don't get "good" points being covered up by masked values.
//                    The view scaling is not altered with any projection. The base view
//                    is best as the input.
//
// Available          5.1.6
//

[_extended] void
TriPlot2_CHIMERA (
                  MVIEW,   // View
                  string,  // Title
                  real,    // X location (bottom left corner of box)
                  real,    // Y location
                  real,    // box width
                  real,    // box height
                  VV,      // X channel
                  VV,      // Y channel
                  VV,      // Z channel
                  VV,      // Mask channel
                  string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                  VV,      // Symbol numbers
                  VV,      // Symbol sizes
                  VV,      // Colours  if symbol number or colour == 0, do not plot
                  string,  // X channel name
                  string,  // Y channel name
                  string,  // Z channel name
                  real,    // Min. X range value
                  real,    // Max. X range value
                  real,    // Min. Y range value
                  real,    // Max. Y range value
                  real,    // Min. Z range value
                  real,    // Max. Z range value
                  int,     // Use Min X Range selection?
                  int,     // Use Max X Range selection?
                  int,     // Use Min Y Range selection?
                  int,     // Use Max Y Range selection?
                  int,     // Use Min Z Range selection?
                  int,     // Use Max Z Range selection?
                  int,     // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                  real,    // Tic Increment (in percent)
                  real     // Grid increment (in percent)
                  );


//-----------------------------------------------------------------------------------------------------------
// FixedSymbolTriPlot_CHIMERA   
//                              Plot a tri-plot using a single fixed symbol.
//                              Optional data masking with masking colour.
//                              Optioinal database linking.
//                              
//
// Returns                      Nothing
//
// Notes                        
//                              Plot a tri plot using a single fixed symbol.
//                              
//
// Available                    8.0.1
//

[_extended] void
FixedSymbolTriPlot_CHIMERA (
                            MVIEW,   // View
                            string,  // Title
                            real,    // X location (bottom left corner of box)
                            real,    // Y location
                            real,    // Triangle side length
                            VV,      // X channel data
                            VV,      // Y channel data
                            VV,      // Z channel data
                            VV,      // Mask channel data
                            int,     // Mask colour; overrides symbol colour where mask data is not dummy. Set to iColor_MVIEW("") to not plot.
                            string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                            int,     // Symbol number (>=0)
                            real,    // Symbol size ( >=0)
                            real,    // Symbol angle (-360 to 360)
                            int,     // Symbol colour
                            int,     // Symbol fill colour
                            DB,      // Database (source of data)
                            VV,      // Line handles for data
                            VV,      // Fid values for data
                            string,  // X channel name
                            string,  // Y channel name
                            string,  // Z channel name
                            int,     // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                            real,    // Tic Increment (in percent)
                            real,    // Grid increment (in percent)
                            string   // plot overlay ("" for none)
                            );


//-----------------------------------------------------------------------------------------------------------
// ZoneColouredTriPlot_CHIMERA   
//                               Plot a tri-plot using colours based on a zone file.
//                               Optional data masking with masking colour.
//                               Optioinal database linking.
//                               
//
// Returns                       Nothing
//
// Notes                         
//                               Plot a tri plot using colours based on a zone file.
//                               
//
// Available                     8.0.1
//

[_extended] void
ZoneColouredTriPlot_CHIMERA (
                             MVIEW,   // View
                             string,  // Title
                             real,    // X location (bottom left corner of box)
                             real,    // Y location
                             real,    // Triangle side length
                             VV,      // X channel data
                             VV,      // Y channel data
                             VV,      // Z channel data
                             VV,      // Mask channel data
                             int,     // Mask colour; overrides symbol colour where mask data is not dummy. Set to iColor_MVIEW("") to not plot.
                             VV,      // Zone channel data
                             string,  // Zone file name
                             string,  // decorated font name, "" for default symbol font (normally symbols.gfn)
                             int,     // Symbol number (>=0)
                             real,    // Symbol size ( >=0)
                             real,    // Symbol angle (-360 to 360)
                             int,     // Symbol colour
                             int,     // Symbol fill colour
                             int,     // Fix symbol edge colour?
                             DB,      // Database (source of data)
                             VV,      // Line handles for data
                             VV,      // Fid values for data
                             string,  // X channel name
                             string,  // Y channel name
                             string,  // Z channel name
                             int,     // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                             real,    // Tic Increment (in percent)
                             real,    // Grid increment (in percent)
                             string   // plot overlay ("" for none)
                             );


//-----------------------------------------------------------------------------------------------------------
// StringClassifiedTriPlot_CHIMERA   
//                                   Plot a tri-plot using symbols based on a symbol class file.
//                                   Optional data masking with masking colour.
//                                   Optioinal database linking.
//                                   
//
// Returns                           Nothing
//
// Notes                             
//                                   Plot a tri-plot using symbols based on a symbol class file.
//                                   
//
// Available                         8.0.1
//

[_extended] void
StringClassifiedTriPlot_CHIMERA (
                                 MVIEW,   // View
                                 string,  // Title
                                 real,    // X location (bottom left corner of box)
                                 real,    // Y location
                                 real,    // Triangle side length
                                 VV,      // X channel data
                                 VV,      // Y channel data
                                 VV,      // Z channel data
                                 VV,      // Mask channel data
                                 int,     // Mask colour; overrides symbol colour. Set to iColor_MVIEW("") to not plot.
                                 VV,      // Class channel data
                                 string,  // Class file (TPAT) name.
                                 real,    // Symbol size override. Set to 0.0 to use class file symbol sizes.
                                 DB,      // Database (source of data)
                                 VV,      // Line handles for data
                                 VV,      // Fid values for data
                                 string,  // X channel name
                                 string,  // Y channel name
                                 string,  // Z channel name
                                 int,     // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                 real,    // Tic Increment (in percent)
                                 real,    // Grid increment (in percent)
                                 string   // plot overlay ("" for none)
                                 );





#endif

