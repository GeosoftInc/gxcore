//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// 
// A META object contains hierarchical organized metadata
// of any type, including other objects.  META information
// is organized in an XML-like structure based on a data
// schema that describes the data hierarchy.   META objects
// are used by many entities that need to store metadata
// specific to the entities or to the application.
// 
// Metadata can be saved in databases and maps, as well as in
// channels, lines, views and groups.  Oasis montaj objects
// can be queried for their associated metadata, and if it
// exists, the metadata can be retrieved and utilized by
// other Oasis montaj processes.
// 
//
//-----------------------------------------------------------------------------------------------------------



#ifndef META_GXH_DEFINED
#define META_GXH_DEFINED

//===========================================================================================================
//
// Define	H_META_INVALID_TOKEN
//
// META Invalid Token
//
// H_META_INVALID_TOKEN
//
//===========================================================================================================

#define H_META_INVALID_TOKEN    -1


//===========================================================================================================
//
// Define	META_CORE_ATTRIB
//
// META Core Attributes
//
// META_CORE_ATTRIB_Class_Description    Description of this class
// META_CORE_ATTRIB_Class_Application    Application that created this class
// META_CORE_ATTRIB_Class_ReferenceURL   URL that defines this class
// META_CORE_ATTRIB_Class_Type           Type of Class
// META_CORE_ATTRIB_Type_Description     Description of this type
// META_CORE_ATTRIB_Type_ReferenceURL    URL that defines this type
// META_CORE_ATTRIB_Type_FixedSize       Fixed size of this type (in bytes)
// META_CORE_ATTRIB_Type_ByteOrder       Byte order for this type
// META_CORE_ATTRIB_Type_MinValue        Minimum Value for this type
// META_CORE_ATTRIB_Type_MaxValue        Maximum Value for this type
// META_CORE_ATTRIB_Type_MaxSize         Maximum Size in bytes for this type
// META_CORE_ATTRIB_Type_ObjectClass     Object class that manages this type
// META_CORE_ATTRIB_Type_hCreatS_Func    Object creating function
// META_CORE_ATTRIB_Type_sSerial_Func    Object serializationg function
// META_CORE_ATTRIB_Type_Enum_Value      Enumeration Value
// META_CORE_ATTRIB_Attrib_Visible       Is this attribute visible to the user
// META_CORE_ATTRIB_Attrib_Editable      Is this atttribute editable by the user
// META_CORE_ATTRIB_Attrib_FlatName      The flat name of this attribute
//
//===========================================================================================================

#define META_CORE_ATTRIB_Class_Description     -300
#define META_CORE_ATTRIB_Class_Application     -301
#define META_CORE_ATTRIB_Class_ReferenceURL    -302
#define META_CORE_ATTRIB_Class_Type            -303
#define META_CORE_ATTRIB_Type_Description      -304
#define META_CORE_ATTRIB_Type_ReferenceURL     -305
#define META_CORE_ATTRIB_Type_FixedSize        -306
#define META_CORE_ATTRIB_Type_ByteOrder        -307
#define META_CORE_ATTRIB_Type_MinValue         -308
#define META_CORE_ATTRIB_Type_MaxValue         -309
#define META_CORE_ATTRIB_Type_MaxSize          -310
#define META_CORE_ATTRIB_Type_ObjectClass      -311
#define META_CORE_ATTRIB_Type_hCreatS_Func     -312
#define META_CORE_ATTRIB_Type_sSerial_Func     -313
#define META_CORE_ATTRIB_Type_Enum_Value       -314
#define META_CORE_ATTRIB_Attrib_Visible        -315
#define META_CORE_ATTRIB_Attrib_Editable       -316
#define META_CORE_ATTRIB_Attrib_FlatName       -317


//===========================================================================================================
//
// Define	META_CORE_CLASS
//
// Meta Core Class Objects
//
// META_CORE_CLASS_Base                  All Classes are subordinate to this class
// META_CORE_CLASS_Predefined            All Predefined symbols are in this class
// META_CORE_CLASS_Attributes
// META_CORE_CLASS_ClassAttributes
// META_CORE_CLASS_TypeAttributes
// META_CORE_CLASS_ObjectAttributes
// META_CORE_CLASS_EnumAttributes
// META_CORE_CLASS_AttributeAttributes
// META_CORE_CLASS_ItemAttributes
// META_CORE_CLASS_Types
// META_CORE_CLASS_Enums
// META_CORE_CLASS_Enum_Bool
// META_CORE_CLASS_Enum_ClassType
//
//===========================================================================================================

#define META_CORE_CLASS_Base                   -100
#define META_CORE_CLASS_Predefined             -101
#define META_CORE_CLASS_Attributes             -102
#define META_CORE_CLASS_ClassAttributes        -103
#define META_CORE_CLASS_TypeAttributes         -104
#define META_CORE_CLASS_ObjectAttributes       -105
#define META_CORE_CLASS_EnumAttributes         -106
#define META_CORE_CLASS_AttributeAttributes    -107
#define META_CORE_CLASS_ItemAttributes         -108
#define META_CORE_CLASS_Types                  -109
#define META_CORE_CLASS_Enums                  -110
#define META_CORE_CLASS_Enum_Bool              -111
#define META_CORE_CLASS_Enum_ClassType         -112


//===========================================================================================================
//
// Define	META_CORE_TYPE
//
// META Core Data Types
//
// META_CORE_TYPE_Bytes       Data Bytes (Base type)
// META_CORE_TYPE_Bool        Boolean
// META_CORE_TYPE_I1          Signed character
// META_CORE_TYPE_U1          Unsigned character
// META_CORE_TYPE_I2          Signed short
// META_CORE_TYPE_U2          Unsigned short
// META_CORE_TYPE_I4          Signed long
// META_CORE_TYPE_U4          Unsigned long
// META_CORE_TYPE_I8          Singed long long (64 bit int)
// META_CORE_TYPE_U8          Unsigned long long
// META_CORE_TYPE_R4          Float (32bit)
// META_CORE_TYPE_R8          Double (64bit)
// META_CORE_TYPE_String      String
// META_CORE_TYPE_Object      Predefined Object (ITR,IPJ)
// META_CORE_TYPE_Enum        Enumeration
// META_CORE_TYPE_ClassType
//
//===========================================================================================================

#define META_CORE_TYPE_Bytes        -200
#define META_CORE_TYPE_Bool         -201
#define META_CORE_TYPE_I1           -202
#define META_CORE_TYPE_U1           -203
#define META_CORE_TYPE_I2           -204
#define META_CORE_TYPE_U2           -205
#define META_CORE_TYPE_I4           -206
#define META_CORE_TYPE_U4           -207
#define META_CORE_TYPE_I8           -208
#define META_CORE_TYPE_U8           -209
#define META_CORE_TYPE_R4           -210
#define META_CORE_TYPE_R8           -211
#define META_CORE_TYPE_String       -212
#define META_CORE_TYPE_Object       -213
#define META_CORE_TYPE_Enum         -214
#define META_CORE_TYPE_ClassType    -215


//===========================================================================================================
// Group Attribute
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// CreateAttrib_META   Create an attribute
//
// Returns             x - Attribute Token
//
// Available           6.1.0
//

[_public] META_TOKEN
CreateAttrib_META (
                   META,        // META object.
                   string,      // Attribute Name
                   META_TOKEN,  // Parent class or <define>META_CORE_CLASS</define>
                   META_TOKEN   // Type of Attribute or <define>META_CORE_TYPE</define>
                   );


//-----------------------------------------------------------------------------------------------------------
// DeleteAttrib_META   Delete Attrib from META.
//
// Returns             Nothing
//
// Available           5.1.6
//

[_public] void
DeleteAttrib_META (
                   META,        // META object.
                   META_TOKEN   // Attrib to delete
                   );




//===========================================================================================================
// Group Browser
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// SetAttributeEditable_META   Allow/disallow an attribute to be editable in the browser
//
// Returns                     Nothing
//
// Available                   5.1.6
//

[_public] void
SetAttributeEditable_META (
                           META,        // META Object
                           META_TOKEN,  // Attribute or <define>META_CORE_ATTRIB</define>
                           int          // Editable Flag
                           );


//-----------------------------------------------------------------------------------------------------------
// SetAttributeVisible_META   Allow/disallow an attribute to be visible in the browser
//
// Returns                    Nothing
//
// Available                  5.1.6
//

[_public] void
SetAttributeVisible_META (
                          META,        // META Object
                          META_TOKEN,  // Attribute or <define>META_CORE_ATTRIB</define>
                          int          // Editable Flag
                          );




//===========================================================================================================
// Group Class
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// CreateClass_META   Create a class
//
// Returns            x - Class Token
//
// Available          6.1.0
//

[_public] META_TOKEN
CreateClass_META (
                  META,        // META object.
                  string,      // Class Name
                  META_TOKEN   // Parent class or <define>META_CORE_CLASS</define>_Base
                  );


//-----------------------------------------------------------------------------------------------------------
// DeleteClass_META   Delete Class from META.
//
// Returns            Nothing
//
// Available          5.1.6
//

[_public] void
DeleteClass_META (
                  META,        // META object.
                  META_TOKEN   // Class to delete
                  );




//===========================================================================================================
// Group Core
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// Copy_META   Copy a META to another
//
// Returns     Nothing
//
// Available   5.1.8
//

[_public] void
Copy_META (
           META,  // Destination META object.
           META   // Source META object.
           );


//-----------------------------------------------------------------------------------------------------------
// Create_META   Create
//
// Returns       META Object
//
// Available     5.0.8
//

[_public] META
Create_META (
             );


//-----------------------------------------------------------------------------------------------------------
// CreateS_META   Create a META Object from a BF
//
// Returns        META Object
//
// Available      5.1.8
//

[_public] META
CreateS_META (
              BF   // BF to serialize from
              );


//-----------------------------------------------------------------------------------------------------------
// Destroy_META   Destroy
//
// Returns        Nothing
//
// Available      5.0.8
//

[_public] void
Destroy_META (
              META   // META to destroy.
              );


//-----------------------------------------------------------------------------------------------------------
// Serial_META   Serialize an META to a BF
//
// Returns       Nothing
//
// Available     5.1.8
//

[_public] void
Serial_META (
             META,  // META object to serialize
             BF     // BF to serialize to
             );




//===========================================================================================================
// Group Get Data
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// FindData_META   Does this meta/attribute have a value ?
//
// Returns         
//                 x  - Data Value
//                 <define>H_META_INVALID_TOKEN</define> - No
//                 
//
// Available       5.1.6
//

[_public] META_TOKEN
FindData_META (
               META,        // META
               META_TOKEN,  // Object
               META_TOKEN   // Attribute
               );


//-----------------------------------------------------------------------------------------------------------
// GetAttribBool_META   Get a boolean value to an attribute
//
// Returns              Nothing
//
// Available            5.1.6
//

[_public] void
GetAttribBool_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    var int      // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// GetAttribEnum_META   Get an enum value to an attribute (as an integer)
//
// Returns              Nothing
//
// Available            5.1.6
//

[_public] void
GetAttribEnum_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    var int      // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// GetAttribInt_META   Get an integer value to an attribute
//
// Returns             Nothing
//
// Available           5.1.0
//

[_public] void
GetAttribInt_META (
                   META,        // META
                   META_TOKEN,  // Object
                   META_TOKEN,  // Attribute
                   var int      // Value to set
                   );


//-----------------------------------------------------------------------------------------------------------
// GetAttribReal_META   Get an integer value to an attribute
//
// Returns              Nothing
//
// Available            5.1.0
//

[_public] void
GetAttribReal_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    var real     // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// IGetAttribString_META   Get a string value to an attribute
//
// Returns                 Nothing
//
// Available               5.1.0
//

[_public] void
IGetAttribString_META (
                       META,        // META
                       META_TOKEN,  // Object
                       META_TOKEN,  // Attribute
                       var string,  // String value to get
                       int          // Length of string
                       );

#define GetAttribString_META(A, B, C, D) IGetAttribString_META(A, B, C, D, sizeof(D))


//-----------------------------------------------------------------------------------------------------------
// iHasValue_META   Does this meta/attribute have a value set?
//
// Returns          <define>GEO_BOOL</define>
//
// Available        6.0.1
//

[_public] int
iHasValue_META (
                META,        // META
                META_TOKEN,  // Object
                META_TOKEN   // Attribute
                );




//===========================================================================================================
// Group Import/Export
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// ExportTableCSV_META   Export all items in a class as a CSV
//
// Returns               Nothing
//
// Available             5.1.5
//

[_public] void
ExportTableCSV_META (
                     META,        // META
                     META_TOKEN,  // Class of items to export
                     string       // Name of CSV file to produce
                     );


//-----------------------------------------------------------------------------------------------------------
// ImportTableCSV_META   Import a CSV into a class as items.
//
// Returns               Nothing
//
// Notes                 
//                       Field names in the CSV file that match attribute names in the class will be
//                       imported into table entries in the class.  Usually this will be used with
//                       a class created using the hCreateTable_SCHEMA method so that the contents of
//                       class can be viewed as a table.
//                       
//
// Available             5.1.5
//

[_public] void
ImportTableCSV_META (
                     META,        // META
                     META_TOKEN,  // Class to import into
                     string       // Name of CSV file to load
                     );


//-----------------------------------------------------------------------------------------------------------
// WriteText_META   Write the entire meta as a text file
//
// Returns          Nothing
//
// Available        5.1.6
//

[_public] void
WriteText_META (
                META,  // META
                WA     // WA to write to
                );




//===========================================================================================================
// Group Item
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// DeleteAllItems_META   Delete all items in this class.
//
// Returns               Nothing
//
// Available             5.1.5
//

[_public] void
DeleteAllItems_META (
                     META,        // META Object
                     META_TOKEN   // Class of items to delete
                     );


//-----------------------------------------------------------------------------------------------------------
// DeleteItem_META   Delete item from META.
//
// Returns           Nothing
//
// Available         5.1.6
//

[_public] void
DeleteItem_META (
                 META,        // META object.
                 META_TOKEN   // Item to delete
                 );


//-----------------------------------------------------------------------------------------------------------
// hCreatItem_META   Creates item in Class.
//
// Returns           
//                   x                    - Next Item
//                   <define>H_META_INVALID_TOKEN</define> - Error
//                   
//
// Available         5.1.6
//

[_public] META_TOKEN
hCreatItem_META (
                 META,        // META Object.
                 string,      // Unique item Name
                 META_TOKEN   // Class (can be root)
                 );


//-----------------------------------------------------------------------------------------------------------
// hGetNextItem_META   Count the number of items in a class
//
// Returns             
//                     x                    - Next Item
//                     <define>H_META_INVALID_TOKEN</define> - No more items
//                     
//
// Available           5.1.3
//

[_public] META_TOKEN
hGetNextItem_META (
                   META,        // META Object
                   META_TOKEN,  // Class
                   META_TOKEN   // Starting Item (must <define>H_META_INVALID_TOKEN</define> for first item)
                   );




//===========================================================================================================
// Group Object
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// GetAttribOBJ_META   Get an object from an attribute
//
// Returns             Nothing
//
// Available           5.1.0
//

[_public] void
GetAttribOBJ_META (
                   META,        // META
                   META_TOKEN,  // Object
                   META_TOKEN,  // Attribute
                   HANDLE       // Object to get info into
                   );


//-----------------------------------------------------------------------------------------------------------
// SetAttribOBJ_META   Set an object to an attribute
//
// Returns             Nothing
//
// Available           5.1.0
//

[_public] void
SetAttribOBJ_META (
                   META,        // META
                   META_TOKEN,  // Object
                   META_TOKEN,  // Attribute
                   HANDLE       // Object to set
                   );




//===========================================================================================================
// Group Set Data
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// SetAttribBool_META   Set a boolean value to an attribute
//
// Returns              Nothing
//
// Available            5.1.6
//

[_public] void
SetAttribBool_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    int          // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// SetAttribEnum_META   Set an enum value to an attribute (as an integer)
//
// Returns              Nothing
//
// Available            5.1.6
//

[_public] void
SetAttribEnum_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    int          // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// SetAttribInt_META   Set an integer value to an attribute
//
// Returns             Nothing
//
// Available           5.1.0
//

[_public] void
SetAttribInt_META (
                   META,        // META
                   META_TOKEN,  // Object
                   META_TOKEN,  // Attribute
                   int          // Value to set
                   );


//-----------------------------------------------------------------------------------------------------------
// SetAttribReal_META   Set an integer value to an attribute
//
// Returns              Nothing
//
// Available            5.1.0
//

[_public] void
SetAttribReal_META (
                    META,        // META
                    META_TOKEN,  // Object
                    META_TOKEN,  // Attribute
                    real         // Value to set
                    );


//-----------------------------------------------------------------------------------------------------------
// SetAttribString_META   Set a string value to an attribute
//
// Returns                Nothing
//
// Available              5.1.0
//

[_public] void
SetAttribString_META (
                      META,        // META
                      META_TOKEN,  // Object
                      META_TOKEN,  // Attribute
                      string       // String value to set
                      );


//-----------------------------------------------------------------------------------------------------------
// SetEmptyAttrib_META   Set an empty attribute data holder
//
// Returns               Nothing
//
// Available             6.3.0
//

[_public] void
SetEmptyAttrib_META (
                     META,        // META Object
                     META_TOKEN,  // MetaObject to set
                     META_TOKEN   // Attribute MetaObject to set
                     );




//===========================================================================================================
// Group Transfer
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// hCopyAcrossAttribute_META   Copy an Attribute from one META to another
//
// Returns                     
//                             x                  - Handle of Attribute
//                             META_INVALID_TOKEN - No visible data
//                             
//
// Available                   5.1.6
//

[_public] META_TOKEN
hCopyAcrossAttribute_META (
                           META,        // Destination META object.
                           META,        // Source META object.
                           META_TOKEN   // Attribute to copy
                           );


//-----------------------------------------------------------------------------------------------------------
// hCopyAcrossClass_META   Copy a Class from one META to another
//
// Returns                 
//                         x                  - Handle of Class
//                         META_INVALID_TOKEN - No visible data anywhere
//                         
//
// Notes                   This will copy all parent classes as well.
//
// Available               5.1.6
//

[_public] META_TOKEN
hCopyAcrossClass_META (
                       META,        // Destination META object.
                       META,        // Source META object.
                       META_TOKEN   // Class to copy
                       );


//-----------------------------------------------------------------------------------------------------------
// hCopyAcrossData_META   Copy a Data value from one META to another
//
// Returns                
//                        x                  - Handle of Data value
//                        META_INVALID_TOKEN - No visible data
//                        
//
// Available              5.1.6
//

[_public] META_TOKEN
hCopyAcrossData_META (
                      META,        // Destination META object.
                      META,        // Source META object.
                      META_TOKEN   // Data value to copy
                      );


//-----------------------------------------------------------------------------------------------------------
// hCopyAcrossItem_META   Copy an Item from one META to another
//
// Returns                
//                        x                  - Handle of Item
//                        META_INVALID_TOKEN - No visible data
//                        
//
// Available              5.1.6
//

[_public] META_TOKEN
hCopyAcrossItem_META (
                      META,        // Destination META object.
                      META,        // Source META object.
                      META_TOKEN   // Item to copy
                      );


//-----------------------------------------------------------------------------------------------------------
// hCopyAcrossType_META   Copy a Type from one META to another
//
// Returns                
//                        x                  - Handle of type
//                        META_INVALID_TOKEN - No visible data anywhere
//                        
//
// Notes                  Classes and parent types will also be copied.
//
// Available              5.1.6
//

[_public] META_TOKEN
hCopyAcrossType_META (
                      META,        // Destination META object.
                      META,        // Source META object.
                      META_TOKEN   // Type to copy
                      );


//-----------------------------------------------------------------------------------------------------------
// MoveDatasAcross_META   Moves data items from one META to another
//
// Returns                Nothing
//
// Available              5.1.8
//

[_public] void
MoveDatasAcross_META (
                      META,        // Destination META Object
                      META,        // Source META Object
                      META_TOKEN,  // Object to copy data from
                      META_TOKEN   // Object to copy data to
                      );




//===========================================================================================================
// Group Type
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// CreateType_META   Create an attribute
//
// Returns           x - Type Token
//
// Available         6.1.0
//

[_public] META_TOKEN
CreateType_META (
                 META,        // META object.
                 string,      // Attribute Name
                 META_TOKEN,  // Parent Class or <define>META_CORE_CLASS</define>
                 META_TOKEN   // Parent Type or <define>META_CORE_TYPE</define>
                 );


//-----------------------------------------------------------------------------------------------------------
// DeleteData_META   Delete Data from META.
//
// Returns           Nothing
//
// Available         5.1.6
//

[_public] void
DeleteData_META (
                 META,        // META object.
                 META_TOKEN   // Data to delete
                 );


//-----------------------------------------------------------------------------------------------------------
// DeleteType_META   Delete Type from META.
//
// Returns           Nothing
//
// Available         5.1.6
//

[_public] void
DeleteType_META (
                 META,        // META object.
                 META_TOKEN   // Type to delete
                 );




//===========================================================================================================
// Group UMN
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// IGetObjName_META   Get the name of this item.
//
// Returns            Nothing
//
// Available          5.1.3
//

[_public] void
IGetObjName_META (
                  META,        // META
                  META_TOKEN,  // Object
                  var string,  // Name of object
                  int          // Size of name buffer
                  );

#define GetObjName_META(A, B, C) IGetObjName_META(A, B, C, sizeof(C))


//-----------------------------------------------------------------------------------------------------------
// ResolveUMN_META   Resolve a Unique Meta Name (UMN) and find the token
//
// Returns           
//                   x                    - Token
//                   <define>H_META_INVALID_TOKEN</define> - Not found
//                   
//
// Available         5.1.0
//

[_public] META_TOKEN
ResolveUMN_META (
                 META,    // META
                 string   // Unique Meta Name (UMN)
                 );





#endif

