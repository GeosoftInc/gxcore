//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// Project functions
//
//-----------------------------------------------------------------------------------------------------------



#ifndef PROJ_GXH_DEFINED
#define PROJ_GXH_DEFINED

//===========================================================================================================
//
// Define	COMMAND_ENV
//
// Command environments
//
// COMMAND_ENV_NORMAL       Normal
// COMMAND_ENV_IN3DVIEWER   Executing from inside 3D Viewer
//
//===========================================================================================================

#define COMMAND_ENV_NORMAL        0
#define COMMAND_ENV_IN3DVIEWER    1


//===========================================================================================================
//
// Define	TOOL_TYPE
//
// Tool type defines
//
// TOOL_TYPE_DEFAULT     Geosoft created default tools
// TOOL_TYPE_AUXILIARY   Auxiliary tools (including custom XTools)
// TOOL_TYPE_ALL         All tools
//
//===========================================================================================================

#define TOOL_TYPE_DEFAULT      0
#define TOOL_TYPE_AUXILIARY    1
#define TOOL_TYPE_ALL          2


//===========================================================================================================
//
// Define	PROJ_DISPLAY
//
// How to display an object
//
// PROJ_DISPLAY_NO       Do not display the object
// PROJ_DISPLAY_YES      Display the object unless user set option not too
// PROJ_DISPLAY_ALWAYS   Always display the object
//
//===========================================================================================================

#define PROJ_DISPLAY_NO        0
#define PROJ_DISPLAY_YES       1
#define PROJ_DISPLAY_ALWAYS    2


//-----------------------------------------------------------------------------------------------------------
// iAddDocument_PROJ   Adds (and opens) a document file in the current project.
//
// Returns             0 - Ok
//                     1 - Error
//
// Notes               The passed file name must be a valid
//                     file name complete with an extension and
//                     qualifiers (if applicable).
//                     
//                     The type string can be one of the following:
//                     Database    Save and close only databases.
//                     Map         Save and close only maps.
//                     Grid        Save and close only grids.
//                     
//
// Available           5.0.0
//

[_public_app] int
iAddDocument_PROJ (
                   string,  // Document name
                   string,  // Type of document to add
                   int      // <define>PROJ_DISPLAY</define>
                   );


//-----------------------------------------------------------------------------------------------------------
// iAddDocumentWithoutOpening_PROJ   Adds (and opens) a document file in the current project.
//
// Returns                           0 - Ok
//                                   1 - Error
//
// Notes                             The passed file name must be a valid
//                                   file name complete with an extension and
//                                   qualifiers (if applicable).
//                                   
//                                   The type string can be one of the following:
//                                   Database    Save and close only databases.
//                                   Map         Save and close only maps.
//                                   Grid        Save and close only grids.
//                                   Voxel		Voxel file.
//                                   
//
// Available                         8.5.0
//

[_public_app] int
iAddDocumentWithoutOpening_PROJ (
                                 string,  // Document name
                                 string   // Type of document to add
                                 );


//-----------------------------------------------------------------------------------------------------------
// iGetCommandEnvironment_PROJ   The current command environment
//
// Returns                       <define>COMMAND_ENV</define>
//                               
//                               Notes									We are moving towards embedded tools and menus and this setting can be set
//                               queried from the project to determine how specific commands should react.
//                               ly 3D viewer is currently making use of this.
//
// Available                     5.0.0
//

[_public_app] int
iGetCommandEnvironment_PROJ (
                             );


//-----------------------------------------------------------------------------------------------------------
// iListDocuments_PROJ   Fills a VV with documents of a certain type.
//
// Returns               The number of documents listed in the VV.
//
// Notes                 
//                       The type string can be one of the following:
//                       Database         List Databases.
//                       Grid             List Grids.
//                       Map              List Maps.
//                       3DView           List 3D Views.
//                       Voxel            List Voxels.
//                       VoxelInversion   List VOXI Documents.
//                       MXD              List ArcGIS MXDs.
//                       GMS3D            List GM-SYS 3D Models.
//                       GMS2D            List GM-SYS 2D Models.
//                       All              Lists all files.
//                       
//
// Available             5.0.0
//

[_public_app] int
iListDocuments_PROJ (
                     VV,      // VV of type -STR_FILE
                     string   // Type of document to obtain
                     );


//-----------------------------------------------------------------------------------------------------------
// iListLoadedDocuments_PROJ   Fills a VV with loaded documents of a certain type.
//
// Returns                     The number of loaded documents listed in the VV.
//
// Notes                       
//                             The type string can be one of the following:
//                             Database         List Databases.
//                             Grid             List Grids.
//                             Map              List Maps.
//                             3DView           List 3D Views.
//                             Voxel            List Voxels.
//                             VoxelInversion   List VOXI Documents.
//                             MXD              List ArcGIS MXDs.
//                             GMS3D            List GM-SYS 3D Models.
//                             GMS2D            List GM-SYS 2D Models.
//                             All              Lists all files.
//                             
//
// Available                   9.2
//

[_public_app] int
iListLoadedDocuments_PROJ (
                           VV,      // VV of type -STR_FILE>
                           string   // Type of document to obtain
                           );


//-----------------------------------------------------------------------------------------------------------
// ICurrentDocument_PROJ   Get the name and type of the loaded document with focus.
//
// Returns                 Nothing.
//
// Available               9.2.0
//

[_public_app] void
ICurrentDocument_PROJ (
                       var string,  // name (empty if none currenlty loaded)
                       int,         // maximum name length
                       var string,  // type
                       int          // maximum type length
                       );

#define CurrentDocument_PROJ(A, B) ICurrentDocument_PROJ(A, sizeof(A), B, sizeof(B))


//-----------------------------------------------------------------------------------------------------------
// ICurrentDocumentOfType_PROJ   Get the name loaded document of a specific type.
//
// Returns                       Nothing.
//
// Available                     9.2.0
//

[_public_app] void
ICurrentDocumentOfType_PROJ (
                             var string,  // name (empty if none currenlty loaded)
                             int,         // maximum name length
                             string       // type
                             );

#define CurrentDocumentOfType_PROJ(A, B) ICurrentDocumentOfType_PROJ(A, sizeof(A), B)


//-----------------------------------------------------------------------------------------------------------
// iListTools_PROJ   Fills an LST object with tools of a certain type and
//                   notes the current visibility setting.
//
// Returns           The number of tools found.
//
// Notes             GX will terminate if there is an error.
//                   
//                   LST object will hold the tool name in the name column and
//                   include whether the tool is currently visible in the value
//                   column (1=visible, 0-hidden).
//
// Available         5.0.0
//

[_public_app] int
iListTools_PROJ (
                 LST,  // LST object to hold list
                 int   // <define>TOOL_TYPE</define>
                 );


//-----------------------------------------------------------------------------------------------------------
// iRemoveDocument_PROJ   Removes (and closes if visible) a document from the current project.
//
// Returns                0 - Ok
//                        1 - Document not found in project
//
// Notes                  The passed file name must be a valid
//                        file name complete with an extension and
//                        qualifiers (if applicable).
//
// Available              5.0.0
//

[_public_app] int
iRemoveDocument_PROJ (
                      string   // Document name
                      );


//-----------------------------------------------------------------------------------------------------------
// iRemoveTool_PROJ   Removes (and closes if visible) a auxiliary tool from the current project.
//
// Returns            0 - Ok
//                    1 - Tool not found in project
//
// Notes              Nothing
//
// Available          5.0.0
//

[_public_app] int
iRemoveTool_PROJ (
                  string   // Tool name
                  );


//-----------------------------------------------------------------------------------------------------------
// iSaveCloseDocuments_PROJ   Saves and closes (if visible) documents contained in the current project.
//
// Returns                    0  - Ok
//                            -1 - User hit cancel in save dialog
//                            1  - Error
//
// Notes                      This wrapper brings up the save dialog tool to allow
//                            the user to save the modified documents for this project.
//                            Only documents that have actually changed will be listed.
//                            
//                            The type string can be one of the following:
//                            Database    Save and close only databases.
//                            Map         Save and close only maps.
//                            Grid        Save and close only grids.
//                            All         Saves and closes all files.
//
// Available                  5.0.0
//

[_public_app] int
iSaveCloseDocuments_PROJ (
                          string   // Type of document to save / close
                          );


//-----------------------------------------------------------------------------------------------------------
// IGetName_PROJ   Return the name of the project file.
//
// Returns         Nothing.
//
// Notes           Return the name of the project file.
//
// Available       8.4.0
//

[_public_app] void
IGetName_PROJ (
               var string,  // name
               int          // maximum name length
               );

#define GetName_PROJ(A) IGetName_PROJ(A, sizeof(A))




//===========================================================================================================
// Group Drag-and-drop methods
//===========================================================================================================

//-----------------------------------------------------------------------------------------------------------
// DropMapClipData_PROJ   Drop Map clipboard data in the current project (workspace background)
//
// Returns                Nothing
//
// Available              5.0.0
//

[_public_app] void
DropMapClipData_PROJ (
                      int   // Handle to Global Clipboard data
                      );





#endif

