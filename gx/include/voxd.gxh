//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// VOX Display object.
//
//-----------------------------------------------------------------------------------------------------------



#ifndef VOXD_GXH_DEFINED
#define VOXD_GXH_DEFINED

//-----------------------------------------------------------------------------------------------------------
// Create_VOXD   Create a new VOXD
//
// Returns       VOXD handle, terminates if creation fails
//
// Notes         
//               Fails if the VOX object is NOT thematic.
//               (See the CreateThematic_VOXD function.)
//               
//
// Available     6.2.0
//

[_public] VOXD
Create_VOXD (
             VOX,     // VOX Object
             string,  // Color table name, "" for default
             int,     // <define>ITR_ZONE</define>
             real     // Color contour interval or rDUMMY
             );


//-----------------------------------------------------------------------------------------------------------
// CreateITR_VOXD   Create a new VOXD with our own ITR
//
// Returns          VOXD handle, terminates if creation fails
//
// Notes            
//                  Fails if the VOX object is thematic.
//                  (See the CreateThematic_VOXD function.)
//                  
//
// Available        6.2.0
//

[_public] VOXD
CreateITR_VOXD (
                VOX,  // VOX Object
                ITR   // ITR Object
                );


//-----------------------------------------------------------------------------------------------------------
// CreateThematic_VOXD   Create a new VOXD for a thematic VOX object.
//
// Returns               VOXD handle, terminates if creation fails
//
// Notes                 
//                       A thematic voxel is one where the stored integer values
//                       represent indices into an internally stored TPAT object.
//                       Thematic voxels contain their own color definitions, and
//                       normal numerical operations, such as applying ITRs for display,
//                       are not valid.
//                       
//                       To determine if a VOX object is thematic, use the
//                       iIsThematic_VOXD function.
//                       
//                       Fails if the VOX object is NOT thematic.
//                       
//
// Available             7.0.0
//

[_public] VOXD
CreateThematic_VOXD (
                     VOX   // VOX Object
                     );


//-----------------------------------------------------------------------------------------------------------
// iIsThematic_VOXD   Is this a thematic voxel?
//
// Returns            1 if VOX is thematic
//
// Notes              
//                    A thematic voxel is one where the stored integer values
//                    represent indices into an internally stored TPAT object.
//                    Thematic voxels contain their own color definitions, and
//                    normal numerical operations, such as applying ITRs for display,
//                    are not valid.
//                    
//
// Available          9.3.0
//

[_public] int
iIsThematic_VOXD (
                  VOXD   // VOXD object
                  );


//-----------------------------------------------------------------------------------------------------------
// GetThematicInfo_VOXD   Get a copy of a thematic voxel's TPAT object and a VV containing the current display selections.
//
// Returns                Nothing
//
// Available              9.3.0
//

[_public] void
GetThematicInfo_VOXD (
                      VOXD,  // VOXD object
                      TPAT,  // TPAT object to get
                      VV     // VV (int) object to fill with current selections
                      );


//-----------------------------------------------------------------------------------------------------------
// SetThematicSelection_VOXD   Get a copy of a thematic voxel's TPAT object and a VV containing the current display selections.
//
// Returns                     Nothing
//
// Available                   9.3.0
//

[_public] void
SetThematicSelection_VOXD (
                           VOXD,  // VOXD object
                           VV     // VV (int) object to set the current selections to
                           );


//-----------------------------------------------------------------------------------------------------------
// Destroy_VOXD   Destroy a VOXD.
//
// Returns        Nothing
//
// Available      6.2.0
//

[_public] void
Destroy_VOXD (
              VOXD   // VOXD to destroy.
              );


//-----------------------------------------------------------------------------------------------------------
// GetDrawControls_VOXD   Get the draw controls
//
// Returns                Nothing
//
// Available              6.2.0
//

[_public] void
GetDrawControls_VOXD (
                      VOXD,      // VOXD object
                      var int,   // Draw Bounding Box
                      var real,  // Transparency
                      var real,  // Min X
                      var real,  // Min Y
                      var real,  // Min Z
                      var real,  // Max X
                      var real,  // Max Y
                      var real   // Max Z
                      );


//-----------------------------------------------------------------------------------------------------------
// IGetName_VOXD   Gets the file name of the voxel.
//
// Returns         Nothing
//
// Available       8.2.0
//

[_public] void
IGetName_VOXD (
               VOXD,        // VOXD handle
               var string,  // File name returned
               int          // File name string size
               );

#define GetName_VOXD(A, B) IGetName_VOXD(A, B, sizeof(B))


//-----------------------------------------------------------------------------------------------------------
// GetITR_VOXD   Get the ITR of the VOXD
//
// Returns       Nothing
//
// Available     6.2.0
//

[_public] void
GetITR_VOXD (
             VOXD,  // VOXD object
             ITR    // ITR object
             );


//-----------------------------------------------------------------------------------------------------------
// GetShellControls_VOXD   Get the shell controls
//
// Returns                 Nothing
//
// Available               6.2.0
//

[_public] void
GetShellControls_VOXD (
                       VOXD,      // VOXD object
                       var real,  // Min Value (rDUMMY for no limit)
                       var real   // Max Value (rDUMMY for no limit)
                       );


//-----------------------------------------------------------------------------------------------------------
// SetDrawControls_VOXD   Set the draw controls
//
// Returns                Nothing
//
// Available              6.2.0
//

[_public] void
SetDrawControls_VOXD (
                      VOXD,  // VOXD object
                      int,   // Draw Bounding Box
                      real,  // Transparency
                      real,  // Min X
                      real,  // Min Y
                      real,  // Min Z
                      real,  // Max X
                      real,  // Max Y
                      real   // Max Z
                      );


//-----------------------------------------------------------------------------------------------------------
// SetITR_VOXD   Set the ITR of the VOXD
//
// Returns       Nothing
//
// Available     6.2.0
//

[_public] void
SetITR_VOXD (
             VOXD,  // VOXD object
             ITR    // ITR object
             );


//-----------------------------------------------------------------------------------------------------------
// SetShellControls_VOXD   Set the shell controls
//
// Returns                 Nothing
//
// Available               6.2.0
//

[_public] void
SetShellControls_VOXD (
                       VOXD,  // VOXD object
                       real,  // Min Value (rDUMMY for no limit)
                       real   // Max Value (rDUMMY for no limit)
                       );





#endif

