//===========================================================================================================
//
// Class	
//
//-----------------------------------------------------------------------------------------------------------
// Description
//
// 
// This class manages the rendering of a 3D view. It allows
// the positioning of the camera, specification of the zoom
// as well as some rendering controls for the axis. It is
// directly releated to the MVIEW class.
// 
//
//-----------------------------------------------------------------------------------------------------------



#ifndef H3DN_GXH_DEFINED
#define H3DN_GXH_DEFINED

//-----------------------------------------------------------------------------------------------------------
// Copy_3DN   Copy one 3DN object to another.
//
// Returns    Nothing
//
// Available  5.1.2
//

[_public] void
Copy_3DN (
          H3DN,  // Destination 3DN to copy to
          H3DN   // Source 3DN to Copy from
          );


//-----------------------------------------------------------------------------------------------------------
// Create_3DN   Creates a 3DN.
//
// Returns      3DN Object
//
// Available    5.1.2
//

[_public] H3DN
Create_3DN (
            );


//-----------------------------------------------------------------------------------------------------------
// Destroy_3DN   Destroys a 3DN object.
//
// Returns       Nothing
//
// Available     5.1.2
//

[_public] void
Destroy_3DN (
             H3DN   // 3DN Handle
             );


//-----------------------------------------------------------------------------------------------------------
// GetPointOfView_3DN   Get location of the point we are looking from
//
// Returns              Nothing
//
// Available            6.3.0
//

[_public] void
GetPointOfView_3DN (
                    H3DN,      // 3DN Handle
                    var real,  // Distance from center relative to longest grid dimension (which is 1.0)
                    var real,  // Declination, 0 to 360 CW from Y
                    var real   // Inclination, -90 to +90
                    );


//-----------------------------------------------------------------------------------------------------------
// GetScale_3DN   Get the axis relative scales.
//
// Returns        Nothing
//
// Available      6.3.0
//

[_public] void
GetScale_3DN (
              H3DN,      // 3DN Handle
              var real,  // X Scale
              var real,  // Y Scale
              var real   // Z Scale
              );


//-----------------------------------------------------------------------------------------------------------
// iGetAxisColor_3DN   Get the Axis draw color
//
// Returns             Axis Color
//
// Available           6.3.0
//

[_public] int
iGetAxisColor_3DN (
                   H3DN   // 3DN Handle
                   );


//-----------------------------------------------------------------------------------------------------------
// IGetAxisFont_3DN   Get the Axis font
//
// Returns            Nothing
//
// Available          6.3.0
//

[_public] void
IGetAxisFont_3DN (
                  H3DN,        // 3DN Handle
                  var string,  // Font name
                  int          // Font Buffer Size
                  );

#define GetAxisFont_3DN(A, B) IGetAxisFont_3DN(A, B, sizeof(B))


//-----------------------------------------------------------------------------------------------------------
// iGetBackgroundColor_3DN   Get the window background color
//
// Returns                   Background Color value
//
// Available                 6.3.0
//

[_public] int
iGetBackgroundColor_3DN (
                         H3DN   // 3DN Handle
                         );


//-----------------------------------------------------------------------------------------------------------
// IGetRenderControls_3DN   Get the rendering controls
//
// Returns                  Nothing
//
// Available                6.3.0
//

[_public] void
IGetRenderControls_3DN (
                        H3DN,        // 3DN Handle
                        var int,     // Render Bounding Box (0 or 1)
                        var int,     // Render Axis (0 or 1)
                        var string,  // Label for X axis
                        int,         // Size of X Buffer
                        var string,  // Label for Y axis
                        int,         // Size of Y Buffer
                        var string,  // Label for Z axis
                        int          // Size of Z Buffer
                        );

#define GetRenderControls_3DN(A, B, C, D, E, F) IGetRenderControls_3DN(A, B, C, D, sizeof(D), E, sizeof(E), F, sizeof(F))


//-----------------------------------------------------------------------------------------------------------
// iGetShading_3DN   Set the shading control on or off
//
// Returns           Shading On/Off
//
// Available         6.3.0
//

[_public] int
iGetShading_3DN (
                 H3DN   // 3DN Handle
                 );


//-----------------------------------------------------------------------------------------------------------
// SetAxisColor_3DN   Set the Axis draw color
//
// Returns            Nothing
//
// Available          5.1.6
//

[_public] void
SetAxisColor_3DN (
                  H3DN,  // 3DN Handle
                  int    // Axis Color
                  );


//-----------------------------------------------------------------------------------------------------------
// SetAxisFont_3DN   Set the Axis font
//
// Returns           Nothing
//
// Available         5.1.6
//

[_public] void
SetAxisFont_3DN (
                 H3DN,    // 3DN Handle
                 string   // Font name
                 );


//-----------------------------------------------------------------------------------------------------------
// SetBackgroundColor_3DN   Set the window background color
//
// Returns                  Nothing
//
// Available                5.1.6
//

[_public] void
SetBackgroundColor_3DN (
                        H3DN,  // 3DN Handle
                        int    // Background Color
                        );


//-----------------------------------------------------------------------------------------------------------
// SetPointOfView_3DN   Set location of the point we are looking from
//
// Returns              Nothing
//
// Available            5.1.2
//

[_public] void
SetPointOfView_3DN (
                    H3DN,  // 3DN Handle
                    real,  // Distance from center relative to longest grid dimension (which is 1.0)
                    real,  // Declination, 0 to 360 CW from Y
                    real   // Inclination, -90 to +90
                    );


//-----------------------------------------------------------------------------------------------------------
// SetRenderControls_3DN   Set the rendering controls
//
// Returns                 Nothing
//
// Available               5.1.2
//

[_public] void
SetRenderControls_3DN (
                       H3DN,    // 3DN Handle
                       int,     // Render Bounding Box (0 or 1)
                       int,     // Render Axis (0 or 1)
                       string,  // Label for X axis
                       string,  // Label for Y axis
                       string   // Label for Z axis
                       );


//-----------------------------------------------------------------------------------------------------------
// SetScale_3DN   Set the axis relative scales.
//
// Returns        Nothing
//
// Notes          
//                By default all scales are equal (1.0). By setting
//                these scales, relative adjustments to the overall
//                view of the 3D objects can be made. Note that they
//                are relative to each other. Thus, setting the scaling
//                to 5,5,5 is the same as 1,1,1. This is typically used
//                to exaggerate one scale such as Z (1,1,5).
//                
//
// Available      6.1.0
//

[_public] void
SetScale_3DN (
              H3DN,  // 3DN Handle
              real,  // X Scale (default 1.0)
              real,  // Y Scale (default 1.0)
              real   // Z Scale (default 1.0)
              );


//-----------------------------------------------------------------------------------------------------------
// SetShading_3DN   Set the shading control on or off
//
// Returns          Nothing
//
// Available        6.3.0
//

[_public] void
SetShading_3DN (
                H3DN,  // 3DN Handle
                int    // 0: Off, 1:  On.
                );





#endif

