//===========================================================================
NAME          = "Search and replace values"
#include <version.gxh>
DESCRIPTION   = "

   SEARCHREPLACE.CHANNEL      channel name
                .TYPE         \"text\" or \"numeric\" (script only)
                .VALUE        value to replace
                .REPLACEMENT  replacement
                
   Comparisons are made in the format of the channel display.
   
"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database Tools/Channel Tools"

// Revision History:
// v6.0.1: Added message to tell user what has occurred.
// v6.0.0: Fixed for LONG and SHORT channels.
// v5.1.3: Using FindChan_DB and iExistChan_DB
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "SearchReplace.gr"
#include "SearchReplace.grh"

//===========================================================================
//                                 INCLUDES
//===========================================================================

#include <all.gxh>


//===========================================================================
//                             GLOBAL VARIABLES
//===========================================================================

#define TEXT      0
#define NUMERIC   1

EDB         eDB;         // Database handle
DB          hDB;         // Database handle
DB_SYMB     Line,Ch;
DGW         hDGW;
LST         List;        // list handle
VV          hVV;

string(STR_DB_SYMBOL) sChan;
string(STR_DEFAULT) sLabel;
string(STR_DB_SYMBOL) sLine;
string(STR_DEFAULT_LONG) sVal,sRpl,sMsg;
real rVal;
int iType,iLen,iTotLines,iFormat,iDecimals,iMod,iTotMod,iLinesMod;


//===========================================================================
//                              CODE
//===========================================================================

{

   // --- get data ---
   
   eDB = Current_EDB();
   
   
   // --- Are we running interactively ? ---

   if (iInteractive_SYS()) {

      // --- Set up lists ---

      hDGW = Create_DGW("SEARCHREPLACE");
      List = GetList_DGW(hDGW,_SEARCHREPLACE_0);
      hDB = Lock_EDB(eDB);
      SymbLST_DB(hDB,List,DB_SYMB_CHAN);
      UnLock_EDB(eDB);
      Sort_LST(List,0,0);


      // --- Set any Defaults ---

      GetCurChan_EDB(eDB,sChan);
      if (iStrlen_STR(sChan))
         SetInfo_DGW(hDGW,_SEARCHREPLACE_0,DGW_TEXT,sChan);
      else   
         SetInfoSYS_DGW(hDGW,_SEARCHREPLACE_0,DGW_TEXT,"SEARCHREPLACE","CHANNEL");
         
      GetCurFidString_EDB(eDB,sVal);
      if (iStrlen_STR(sVal))
         SetInfo_DGW(hDGW,_SEARCHREPLACE_1,DGW_TEXT,sVal);
      else   
         SetInfoSYS_DGW(hDGW,_SEARCHREPLACE_1,DGW_TEXT,"SEARCHREPLACE","VALUE");
         
      SetInfoSYS_DGW(hDGW,_SEARCHREPLACE_2,DGW_TEXT,"SEARCHREPLACE","REPLACEMENT");


      // --- Run the Dialogue ---

      if (iRunDialogue_DGW(hDGW)) Cancel_SYS();    


      // --- Get the Strings ---

      GetInfoSYS_DGW(hDGW,_SEARCHREPLACE_0,DGW_TEXT,"SEARCHREPLACE","CHANNEL");
      GetInfoSYS_DGW(hDGW,_SEARCHREPLACE_1,DGW_TEXT,"SEARCHREPLACE","VALUE");
      GetInfoSYS_DGW(hDGW,_SEARCHREPLACE_2,DGW_TEXT,"SEARCHREPLACE","REPLACEMENT");
      SetString_SYS("SEARCHREPLACE","TYPE","Text");


      // --- Destroy the Dialogue ---

      Destroy_DGW(hDGW);

   }
   
   GetString_SYS("SEARCHREPLACE","CHANNEL",sChan);
   GetString_SYS("SEARCHREPLACE","VALUE",sVal);
   GetString_SYS("SEARCHREPLACE","REPLACEMENT",sRpl);
   
   
   // --- get line and channel ---
   
   hDB = Lock_EDB(eDB);
   Line = FirstSelLine_DB(hDB);
   Ch = FindChan_DB(hDB,sChan);
   
   
   // --- create a VV to hold the data ---
   
   iType = iGetChanType_DB(hDB,Ch);
   iFormat = iGetChanFormat_DB(hDB,Ch);
   iDecimals = iGetChanDecimal_DB(hDB,Ch);
   hVV = CreateExt_VV(iType,0);
   
   
   // --- reformat comparison value to channel format ---
   
   if ((iType == GS_FLOAT) || (iType == GS_DOUBLE)) {
   
      rVal  = rScanForm_STR(sVal,iFormat);
      FormatReal_STR(rVal,sVal,iFormat,sizeof(sVal)-1,iDecimals);
      
   }         
   
   
   // --- Go through all selected Lines ---

   iTotMod = 0;
   iLinesMod = 0;
   iLen = 0;
   iTotLines = iCountSelLines_DB(hDB);
   Progress_SYS(1);
   ProgName_SYS("",1);
   LockSymb_DB(hDB,Ch,DB_LOCK_READWRITE,DB_WAIT_NONE);
   while (iIsLineValid_DB(hDB,Line)) {


      // --- Update the Progress Bar ---

      LockSymb_DB(hDB,Line,DB_LOCK_READONLY,DB_WAIT_NONE);
      GetSymbName_DB(hDB,Line,sLine);
      UnLockSymb_DB(hDB,Line);
      Strcpy_STR(sLabel, _("Replace on line: "));
      Strcat_STR(sLabel,sLine);
      ProgName_SYS(sLabel,0);
      ProgUpdateL_SYS(iLen,iTotLines);


      // --- process ---

      GetChanVV_DB(hDB,Line,Ch,hVV);      
      SearchReplaceTextEx_VVU(hVV,iFormat,iDecimals,sVal,sRpl,VVU_SRCHREPL_CASE_TOLERANT, iMod);
      PutChanVV_DB(hDB,Line,Ch,hVV);

      if(iMod>0) {
         iTotMod += iMod;
         iLinesMod++;
      }      
      
      // --- Advance to Next Line ---        

      Line = NextSelLine_DB(hDB, Line );
      iLen++;

   }
   
   if(iInteractive_SYS()) {
   
      if(iLen==0) 
         Strcpy_STR(sMsg, _("No lines were selected for searching. No items were located or replaced."));
      else {
         Strcpy_STR(sMsg, _("Searched channel "));
         Strcat_STR(sMsg, sChan);
         Strcat_STR(sMsg, _(" on "));         
         FormatI_STR(iLen, sVal, 10);
         Strcat_STR(sMsg, sVal);
         if(iLen==1)
           Strcat_STR(sMsg, _(" line. "));
         else
           Strcat_STR(sMsg, _(" lines. "));

         if(iTotMod==0)
            Strcat_STR(sMsg, _("No matching items were found."));
         else {
            if(iTotMod==1)
               Strcat_STR(sMsg, _("One item was replaced on "));
            else {
               Strcat_STR(sMsg, _("A total of "));
               FormatI_STR(iTotMod, sVal, 10);
               Strcat_STR(sMsg, sVal);
               Strcat_STR(sMsg, _(" items were replaced on "));
            }
            if(iLinesMod==1)
               Strcat_STR(sMsg, _("one line."));
            else {
               FormatI_STR(iLinesMod, sVal, 10);
               Strcat_STR(sMsg, sVal);
               Strcat_STR(sMsg, _(" lines."));
            
            }
         }
      }
      DisplayMessage_SYS(_("Search and Replace"),sMsg);
   }
   
   UnLockSymb_DB(hDB,Ch);
   UnLock_EDB(eDB);
   Progress_SYS(0);
   
}
