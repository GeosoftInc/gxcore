//===========================================================================
NAME          = "Translate a coordinate system"
#include <version.gxh>
DESCRIPTION   = "

Translate coordinates:  X = (X - XO) * SCALE
                        Y = (Y - YO) * SCALE

    XYTRNS.XCHAN  - X channel
          .YCHAN  - Y channel
          .XO     - X origin
          .YO     - Y origin
          .SCALE  - scale factor
"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Coordinates"

// Revision History:
// v6.4.0: Set default X and Y to the current X, Y.
// v5.1.4: Fixed bug in checking for backup channels.
// v5.1.3: Using "Current" X and Y channels
//         Using FindChan_DB and iExistChan_DB
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "xytrns.gr"
#include "xytrns.grh"

//===========================================================================
//                                  INCLUDE
//===========================================================================

#include <all.gxh>     // system

//===========================================================================
//                                 VARIABLES
//===========================================================================

string(STR_DB_SYMBOL) sXNewCh, sYNewCh;
string(STR_DB_SYMBOL) sXCh,sYCh,sXBackCh,sYBackCh;

EDB         EData;            // Database handle
DB          Data;             // Database handle
DB_SYMB     XCh,YCh;          // Channel Handle
DB_SYMB     Line;             // Line Handle
DGW         Diag;             // Dialogue handle
LST         List;             // List handle
VV          hVV;              

int         i;                // Utility 
int         iLines;           // Number of Lines Processed
int         iTotLines;        // Total Number of Lines to Process

real        rX0,rY0,rScale;

string(STR_DEFAULT_SHORT) sTemp;            // Temp string
string(STR_DEFAULT) sLabel;

//===========================================================================
//                                   CODE
//===========================================================================

{

   // --- Get database ---

   EData = Current_EDB();
   Data = Lock_EDB(EData);
   
   
   // --- Set default new X, Y channels to the existing current X, Y ---
   
   GetString_SYS("XYTRNS", "XCHAN", sXNewCh);
   if(!iStrlen_STR(sXNewCh) || !iExistChan_DB(Data, sXNewCh))
   {
      GetXYZChan_DB(Data, DB_CHAN_X, sXNewCh);
      SetString_SYS("XYTRNS", "XCHAN", sXNewCh);
   }

   GetString_SYS("XYTRNS", "YCHAN", sYNewCh);
   if(!iStrlen_STR(sYNewCh) || !iExistChan_DB(Data, sYNewCh))
   {
      GetXYZChan_DB(Data, DB_CHAN_Y, sYNewCh);
      SetString_SYS("XYTRNS", "YCHAN", sYNewCh);
   }
   

   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {

      // --- Create the Dialogue ---

      Diag = Create_DGW("XYTRNS");


      // --- Set up lists ---

      List = GetList_DGW(Diag,_XYTRNS_0);
      SymbLST_DB(Data,List,DB_SYMB_CHAN);
      Sort_LST(List,0,0);

      List = GetList_DGW(Diag,_XYTRNS_1);
      SymbLST_DB(Data,List,DB_SYMB_CHAN);
      Sort_LST(List,0,0);
      

      // --- Set any Defaults ---

      SetInfoSYS_DGW(Diag,_XYTRNS_0,DGW_TEXT,"XYTRNS","XCHAN");     
      SetInfoSYS_DGW(Diag,_XYTRNS_1,DGW_TEXT,"XYTRNS","YCHAN");
      SetInfoSYS_DGW(Diag,_XYTRNS_2,DGW_TEXT,"XYTRNS","X0");     
      SetInfoSYS_DGW(Diag,_XYTRNS_3,DGW_TEXT,"XYTRNS","Y0");     
      SetInfoSYS_DGW(Diag,_XYTRNS_4,DGW_TEXT,"XYTRNS","SCALE");     
          

      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i == -1) Cancel_SYS();


      GetInfoSYS_DGW(Diag,_XYTRNS_0,DGW_TEXT,"XYTRNS","XCHAN");     
      GetInfoSYS_DGW(Diag,_XYTRNS_1,DGW_TEXT,"XYTRNS","YCHAN");
      GetInfoSYS_DGW(Diag,_XYTRNS_2,DGW_TEXT,"XYTRNS","X0");     
      GetInfoSYS_DGW(Diag,_XYTRNS_3,DGW_TEXT,"XYTRNS","Y0");     
      GetInfoSYS_DGW(Diag,_XYTRNS_4,DGW_TEXT,"XYTRNS","SCALE");     
      

      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);

   }
   

   // --- Get Parameters ---

   GetString_SYS("XYTRNS","XCHAN",sXNewCh);
   GetString_SYS("XYTRNS","YCHAN",sYNewCh);
   rX0    = rGetReal_SYS("XYTRNS","X0");
   rY0    = rGetReal_SYS("XYTRNS","Y0");
   rScale = rGetReal_SYS("XYTRNS","SCALE");
   
   
   // --- Do the Channels Exist ? ---

   if (!iExistChan_DB(Data,sXNewCh) ||
       !iExistChan_DB(Data,sYNewCh))
      Abort_SYS(_("New X or Y channel does not exist."));
      
   
   // --- Get current X, Y channels ---

   GetXYZChan_DB(Data, DB_CHAN_X, sXCh);
   GetXYZChan_DB(Data, DB_CHAN_Y, sYCh);
   
   
   // --- Get names of backups to current X, Y channels ---
   
   Strcpy_STR(sXBackCh, "__");
   Strcat_STR(sXBackCh, sXCh);
   Strcpy_STR(sYBackCh, "__");
   Strcat_STR(sYBackCh, sYCh);
   
   // --- if we are working with current X and Y, save originals ---      
      
   if ( (iStrcmp_STR(sXNewCh,sXCh,STR_CASE_TOLERANT) == 0) && (iStrcmp_STR(sYNewCh,sYCh,STR_CASE_TOLERANT) == 0) &&
        (!iExistChan_DB(Data,sXBackCh)) && (!iExistChan_DB(Data,sYBackCh)) )
   {
      UnLock_EDB(EData);                  
      iRunGX_SYS("xysave");
      Data = Lock_EDB(EData);
   }         
         
   // --- get channels ---         
      
   XCh = FindChan_DB(Data,sXNewCh);
   YCh = FindChan_DB(Data,sYNewCh);
   

   // --- Lock the channel symbols ---

   LockSymb_DB(Data,YCh,DB_LOCK_READWRITE,DB_WAIT_INFINITY);
   LockSymb_DB(Data,XCh,DB_LOCK_READWRITE,DB_WAIT_INFINITY);
   
   
   // --- create VV's ---
   
   hVV = Create_VV(REAL,0);


   // --- Prepare to do the work ---

   iLines = 0;
   iTotLines = iCountSelLines_DB(Data);
   Progress_SYS(1);
   

   // --- Go through all selected Lines ---

   ProgName_SYS("",1);
   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data,Line))
   {
   
      // --- Update the Progress Bar ---

      LockSymb_DB(Data,Line,DB_LOCK_READONLY,DB_WAIT_INFINITY);
      GetSymbName_DB(Data,Line,sTemp);
      UnLockSymb_DB(Data,Line);
      Strcpy_STR(sLabel,_("line: "));
      Strcat_STR(sLabel,sTemp);
      ProgName_SYS(sLabel,0);
      ProgUpdateL_SYS(iLines,iTotLines);
      
      
      // --- translate ---
      
      GetChanVV_DB(Data,Line,XCh,hVV);      
      Translate_VVU(hVV,-rX0,rScale);
      PutChanVV_DB(Data,Line,XCh,hVV);      

      GetChanVV_DB(Data,Line,YCh,hVV);      
      Translate_VVU(hVV,-rY0,rScale);
      PutChanVV_DB(Data,Line,YCh,hVV);      
      

      // --- Advance to Next Line ---        

      Line = NextSelLine_DB(Data, Line );
      iLines++;

   }

   // --- Add maker ---

   EasyMakerSymb_DB(Data,XCh,_("Translate"),"XYTRNS;");
   

   // --- Unlock the channel symbol ---

   UnLockSymb_DB(Data,XCh);
   UnLockSymb_DB(Data,YCh);
   

   // --- done ---

   Progress_SYS(0);
   
}
