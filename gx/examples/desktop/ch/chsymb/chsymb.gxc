//===========================================================================
NAME          = "Plot location symbols"
#include <version.gxh>

TRANSLATIONDOMAIN = "geochemistry"
TRANSLATIONFRIENDLYPATH = "GX/GeochemMap/Point Plots"

DESCRIPTION   = "

   CHSYMB.SYMBOL        symbol number
			.MASK				mask channel to use
         .SIZE          symbol size in mm.
         .WEIGHT        symbol weight
         .LINE_COLOR    symbol color 
         .FILL_COLOR    fill color

"
// Revision History:
// v7.1.1: Turn on group clip mode.
// v7.0.0: Symbol font weight fix-up.
// v5.1.3: Using "Current" X and Y channels
//         Added Group/Individual symbols option as in SYMBOLS GX
//         Using FindChan_DB and iExistChan_DB
//===========================================================================

RESOURCE = "chsymb.gr"
#include "chsymb.grh"

//===========================================================================

#include <all.gxh>


//===========================================================================
//                             VARIABLES
//===========================================================================

string(STR_DEFAULT_LONG) sGroup;
string(STR_GROUP) sGrpName;
string(STR_DEFAULT) sLcolor,sFcolor,sFont,sSize;
string(STR_DEFAULT) sLabel, sTemp;
string(STR_DB_SYMBOL) sLine, sMask;

EDB      EData;
DB       Data;
DB_SYMB  XCh,YCh,MCh; 	// Channel handles
DB_SYMB  Line;        	// Line handle
EMAP     EMap;
MAP   	Map;
MVIEW 	View;
DGW   	Diag;
IPJ      DataIPJ;
VV    	VVx,VVy,VVm,VVxo,VVyo,VVs;
LST      List;
int   	iSymb,iLines,iTotLines,iWeight,iMask,iOffset,iGroup;
real  	rScale,rSize,rOffSize;
string(STR_DEFAULT_SHORT) sVal;


//===========================================================================
//                           MAP CODE
//===========================================================================

{
   EData = Current_EDB();
   Data = Lock_EDB(EData);

   // --- Get Default Mask Channel if required, and if it exists or is "None" ---

   if (iGlobal_SYS("CHIMERA.MASK",sMask) == 0) {
      if (iGlobal_SYS("CHIMERA.DEFMASK",sTemp) == 0) {
         if(iScanI_STR(sTemp)==1 &&
            (iExistChan_DB(Data,sMask) || 
             !iStrcmp_STR(sMask,_n("None"),STR_CASE_TOLERANT))) {

            SetString_SYS("CHSYMB","MASK",sMask);
         }
      }
   }


   // --- Are we running interactively ? ---

   if (iInteractive_SYS()) {


      // --- Create the Dialogue ---

      Diag = Create_DGW("chsymb");

      // --- Set up mask channel list ---

      List = GetList_DGW(Diag,_CHSYMB_0);
      MaskChanLST_CHIMERA(Data,List);
      Sort_LST(List,0,0);
      

      // --- Set any Defaults from INI ---

      SetInfoSYS_DGW(Diag,_CHSYMB_0,DGW_TEXT,     "CHSYMB","MASK");     
      SetInfoSYS_DGW(Diag,_CHSYMB_1,DGW_LISTALIAS,"CHSYMB","SYMBOL");     
      SetInfoSYS_DGW(Diag,_CHSYMB_2,DGW_TEXT,     "CHSYMB","SIZE");     
      SetInfoSYS_DGW(Diag,_CHSYMB_3,DGW_LISTALIAS,"CHSYMB","WEIGHT");     
      SetInfoSYS_DGW(Diag,_CHSYMB_4,DGW_TEXT,     "CHSYMB","LINE_COLOR");     
      SetInfoSYS_DGW(Diag,_CHSYMB_5,DGW_TEXT,     "CHSYMB","FILL_COLOR");     
      SetInfoSYS_DGW(Diag,_CHSYMB_6,DGW_LISTALIAS,"CHSYMB","GROUP");     
      SetInfoSYS_DGW(Diag,_CHSYMB_7,DGW_LISTALIAS,"CHSYMB","OFFSET");     


      // --- Run the Dialogue ---

      if (iRunDialogue_DGW(Diag) != 0)
         Cancel_SYS();    

      
      // --- Put values back in INI ---

      GetInfoSYS_DGW(Diag,_CHSYMB_0,DGW_TEXT      ,"CHSYMB","MASK");     
      GetInfoSYS_DGW(Diag,_CHSYMB_1,DGW_LISTALIAS ,"CHSYMB","SYMBOL");     
      GetInfoSYS_DGW(Diag,_CHSYMB_2,DGW_TEXT      ,"CHSYMB","SIZE");     
      GetInfoSYS_DGW(Diag,_CHSYMB_3,DGW_LISTALIAS ,"CHSYMB","WEIGHT");     
      GetInfoSYS_DGW(Diag,_CHSYMB_4,DGW_TEXT ,    "CHSYMB","LINE_COLOR");     
      GetInfoSYS_DGW(Diag,_CHSYMB_5,DGW_TEXT ,    "CHSYMB","FILL_COLOR");     
      GetInfoSYS_DGW(Diag,_CHSYMB_6,DGW_LISTALIAS,"CHSYMB","GROUP");     
      GetInfoSYS_DGW(Diag,_CHSYMB_7,DGW_LISTALIAS,"CHSYMB","OFFSET");     

   }

   // --- get current map and database ---

   EMap = Current_EMAP();
   Map = Lock_EMAP(EMap);

   // --- Get Parameters ---

   iSymb = iGetInt_SYS("CHSYMB","SYMBOL");    
   GetString_SYS("CHSYMB","MASK",sMask);
   rSize = rGetReal_SYS("CHSYMB","SIZE");     
   
   iWeight = iGetInt_SYS("CHSYMB","WEIGHT");    
   if(iWeight==iDUMMY) iWeight = MVIEW_FONT_WEIGHT_MEDIUM;
   
   GetString_SYS("CHSYMB","LINE_COLOR",sLcolor);
   GetString_SYS("CHSYMB","FILL_COLOR",sFcolor);

   iGroup = iGetInt_SYS("CHSYMB","GROUP");
   if(iGroup!=0) iGroup = 1;  // default is yes.
   if(!iGroup)
      GetString_SYS("CHSYMB","SIZE",sSize);


   // --- Do the reference channels exist ? ---

   XCh = GetXYZChanSymb_DB(Data, DB_CHAN_X);
   if (XCh==NULLSYMB)
      Abort_SYS(_("The current X channel does not exist."));
   LockSymb_DB(Data,XCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);

   YCh = GetXYZChanSymb_DB(Data, DB_CHAN_Y);
   if (YCh==NULLSYMB)
      Abort_SYS(_("The current Y channel does not exist."));
   LockSymb_DB(Data,YCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);   


   // --- Apply mask? ---

   iMask = 0;
   if(iStrlen_STR(sMask) && iStrcmp_STR(sMask, _n("None"), STR_CASE_TOLERANT)) {
      MCh = FindChan_DB(Data,sMask);
      if (MCh==NULLSYMB)  
         Abort_SYS(_("Mask channel does not exist."));
      LockSymb_DB(Data,MCh,DB_LOCK_READONLY,DB_WAIT_NONE);     
      iMask = 1;
   }

   // --- Offset symbols? ---

   iOffset = iGetInt_SYS("CHSYMB","OFFSET");
   if(iOffset!=1) iOffset=0;  // No by default

   if(iOffset) {
      iGlobal_SYS("CHIMERA.OFFSIZE",sVal);
      rOffSize = rScanR_STR(sVal);
      if(rOffSize==rDUMMY || rOffSize<=0.0)
         rOffSize = 0.5;
   }

   // --- open the data view ---

   View = Create_MVIEW(Map,"*Data",MVIEW_WRITEOLD);


   // --- Set the group clip mode ---
   
   GroupClipMode_MVIEW(View, CLIP_ON);
   

   // --- Handle Projections ---
   
   DataIPJ = Create_IPJ();
   GetIPJ_DB(Data,XCh,DataIPJ);
   SetWorkingIPJ_MVIEW(View,DataIPJ);

   // --- set thining and local scale ---

   SetThinRes_MVIEW(View,0.02);
   rScale = rScaleMM_MVIEW(View);

   // --- Start a separate group for offset markers and lines ---

   if(iOffset) 
      StartGroup_MVIEW(View,"OffsetMarkers",MVIEW_GROUP_NEW);
   else {
      if(iExistGroup_MVIEW (View, "OffsetMarkers")) {
         MarkAllGroups_MVIEW(View, 0);
         MarkGroup_MVIEW(View, "OffsetMarkers", 1);
         DelMarkedGroups_MVIEW(View);
      }
   }


   // --- start a symbols group ---

   GetName_DB(Data,DB_NAME_FILE,sGroup);
   FileNamePart_STR(sGroup,sGroup,STR_FILE_PART_NAME);
//   Strcat_STR(sGroup,"_chsymb");
   GenGroupName_STR("SYMB",sGroup,"",sGrpName);
   Strcpy_STR(sGroup,sGrpName);
   StartGroup_MVIEW(View,sGroup,MVIEW_GROUP_NEW);

        

   // --- maker ---

   Maker_MVIEW(View,1,1,_("chsymb"),MAKER_GX,_("Symbol plot..."),"CHSYMB;");


   // --- Create link to database ---

   Link_MVIEW(View,Data,_n("Data Link"));


   // --- set parameters ---

   if (iGlobal_SYS("MONTAJ.DEFAULT_SYMBOL_FONT",sFont) == 1)
      Strcpy_STR(sFont,_n("symbols"));


   // --- get some VV's ---

   VVx = Create_VV(REAL,0);
   VVy = Create_VV(REAL,0);
   VVm = Create_VV(INT,0);
   if(iOffset) {
      VVxo = Create_VV(REAL,0);
      VVyo = Create_VV(REAL,0);
   }
   if(!iGroup) {
       VVs = Create_VV(REAL,0);
   }


   // --- Draw lines ---

   iLines = 0;
   iTotLines = iCountSelLines_DB(Data);
   Progress_SYS(1);
   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data,Line))
   {

      // --- get line label ---

      LockSymb_DB(Data,Line,DB_LOCK_READONLY,DB_WAIT_INFINITY);
      LineLabel_DB(Data,Line,sLine,DB_LINE_LABEL_FORMAT_FULL);
      UnLockSymb_DB(Data,Line);

      // --- Update the Progress Bar ---

      Strcpy_STR(sLabel,_("Drawing line: "));
      Strcat_STR(sLabel,sLine);
      ProgName_SYS(sLabel,0);
      ProgUpdateL_SYS(iLines,iTotLines);



      // --- Get X and Y ---

      GetChanVV_DB(Data,Line,XCh,VVx);
      GetChanVV_DB(Data,Line,YCh,VVy);
      ReFidVV_VV(VVx,VVy);


      // --- add line link ---

      LineLabel_DB(Data,Line,sLine,DB_LINE_LABEL_FORMAT_LINK);
      ChangeLineMessage_MVIEW(View,sLine);


		// --- mask? ---

   	if(iMask) {

      	GetChanVV_DB(Data,Line,MCh,VVm);
      	ReFidVV_VV(VVm,VVx);
			Mask_VVU(VVx,VVm);

		}
			


      if(iOffset) {
         StartGroup_MVIEW(View,"OffsetMarkers",MVIEW_GROUP_APPEND);
         OffsetCircles_VVU(VVx, VVy, rSize*rScale, rSize*rScale, VVxo, VVyo);
         DrawCircleOffsetMarkers_CHIMERA(View, VVx, VVy, VVxo, VVyo, rOffSize*rScale);
      }

      // --- Draw ---

      StartGroup_MVIEW(View,sGroup,MVIEW_GROUP_APPEND);
		

      // --- Reset attributes (can be altered for offset symbols) ---

      SymbFont_MVIEW(View,sFont,TRUE,iWeight,FALSE);
      SymbColor_MVIEW(View,iColor_MVIEW(sLcolor));
      SymbFillColor_MVIEW(View,iColor_MVIEW(sFcolor));
      SymbNumber_MVIEW(View,iSymb);
      SymbSize_MVIEW(View,rSize*rScale);
      SymbAngle_MVIEW(View,0.0);

      if(iGroup) {
         if(iOffset)
            Symbols_MVIEW(View,VVxo,VVyo);
         else
            Symbols_MVIEW(View,VVx,VVy);
      }
      else {   // Force symbols to draw one by one....
         SetLen_VV(VVs, iLength_VV(VVx));
         SetRealN_VV(VVs, 0, -1, 1.0);         
         if(iOffset)
            ClassifiedSymbols_MVIEW(View,VVxo,VVyo,VVs,rScale,0.0,"2",sSize,sFcolor);
         else
            ClassifiedSymbols_MVIEW(View,VVx,VVy,VVs,rScale,0.0,"2",sSize,sFcolor);
      }


      // --- Advance to Next Line ---        

      Line = NextSelLine_DB(Data, Line );
      iLines++;

   }
   Progress_SYS(0);


   // --- Unlock the channel symbol ---

   UnLockSymb_DB(Data,XCh);
   UnLockSymb_DB(Data,YCh);
   if(iMask)
   	UnLockSymb_DB(Data,MCh);


   // --- done ---

   Destroy_MVIEW(View);
   Destroy_IPJ(DataIPJ);

   // --- Release the locks ---

   UnLock_EDB(EData);   
   UnLock_EMAP(EMap);
}
