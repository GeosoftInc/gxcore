//===========================================================================
NAME          = "CHIMERA scatter launch from a group using transforms"
#include <version.gxh>
TRANSLATIONDOMAIN = "geochemistry"
TRANSLATIONFRIENDLYPATH = "GX/GeochemAnalysis"

DESCRIPTION   = ""
// Revision History:
// v6.3.0: Make it more like the CHMSCPICK GX.
// v6.0.0: Making use of new range and transform parameters
//         when launching scatter tool. LaunchScatter_CHIMERA now uses
//         "GX:PARAM" syntax.
//===========================================================================

#include <all.gxh>


//===========================================================================
//                             VARIABLES
//===========================================================================

int iN,iX,iY,iXTrans,iYTrans;
real rX,rY,rDx,rDy,rCx,rCy,rMinX,rMaxX,rMinY,rMaxY;
string(STR_DEFAULT_LONG) sTemp,sX,sY,sVal;
string(STR_FILE) sData;

//===========================================================================
//                           MAP CODE
//===========================================================================

{

   // --- Are we running interactively ? ---

   if (!iInteractive_SYS()) Cancel_SYS();
   
   
   // --- Add maker ---
   
   rX = rGetReal_SYS("CHCORPICK","X");
   rY = rGetReal_SYS("CHCORPICK","Y");
   rDx = rGetReal_SYS("CHCORPICK","DX");
   rDy = rGetReal_SYS("CHCORPICK","DY");
   iN = iGetInt_SYS("CHCORPICK","NC");
   
   
   // --- get cursor location ---

   rCx = rCy = 0.0;   
   GetCursor_EMAP(Current_EMAP(),rCx,rCy);
   
   
   // --- work out reference ---
   
   iX = (int)((rCx-rX)/rDx);
   iY = (int)(((rY+(real)iN*rDy)-rCy)/rDy);
   if ((iX < 0) || (iY < 0) || (iX >= iN) || (iY >= iN)) 
      Abort_SYS(_("The cursor must be inside data area."));
      
      
   // --- channel names ---
      
   Strcpy_STR(sTemp,"C");
   FormatI_STR(iX,sX,4); iStrMin_STR(sX);
   Strcat_STR(sTemp,sX);
   GetString_SYS("CHCORPICK",sTemp,sX);
   
   Strcpy_STR(sTemp,"C");
   FormatI_STR(iY,sY,4); iStrMin_STR(sY);
   Strcat_STR(sTemp,sY);
   GetString_SYS("CHCORPICK",sTemp,sY);
   
   
   // --- Channel ranges ---
   
   Strcpy_STR(sTemp,"MIN");
   FormatI_STR(iX,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   rMinX = rGetReal_SYS("CHCORPICK",sTemp);
   
   Strcpy_STR(sTemp,"MAX");
   FormatI_STR(iX,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   rMaxX = rGetReal_SYS("CHCORPICK",sTemp);
   
   Strcpy_STR(sTemp,"MIN");
   FormatI_STR(iY,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   rMinY = rGetReal_SYS("CHCORPICK",sTemp);
   
   Strcpy_STR(sTemp,"MAX");
   FormatI_STR(iY,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   rMaxY = rGetReal_SYS("CHCORPICK",sTemp);
   
   
   // --- Transforms ---
   
   Strcpy_STR(sTemp,"TRANS");
   FormatI_STR(iX,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   iXTrans = iGetInt_SYS("CHCORPICK",sTemp);   
   if(iXTrans==iDUMMY) iXTrans = 0;
   
   Strcpy_STR(sTemp,"TRANS");
   FormatI_STR(iY,sVal,4); iStrMin_STR(sVal);
   Strcat_STR(sTemp,sVal);
   iYTrans = iGetInt_SYS("CHCORPICK",sTemp);
   if(iYTrans==iDUMMY) iYTrans = 0;

   
   // --- load database ---
   
   GetString_SYS("CHCORPICK","DATABASE",sData);
   if (!iLoaded_EDB(sData)) Load_EDB(sData);
   
   
   // --- launch scatter tool ---
   
   SetString_SYS("SCATTER","STM","none");
   SetString_SYS("SCATTER","STM_NAME","");
   SetString_SYS("SCATTER","X",sX);
   SetString_SYS("SCATTER","Y",sY);
   SetReal_SYS("SCATTER","XMIN",rMinX);
   SetReal_SYS("SCATTER","XMAX",rMaxX);
   SetInt_SYS("SCATTER","XTRANS",iXTrans);
   SetReal_SYS("SCATTER","YMIN",rMinY);
   SetReal_SYS("SCATTER","YMAX",rMaxY);
   SetInt_SYS("SCATTER","YTRANS",iYTrans);

   SetString_SYS("SCATTER","MASK","");
   
   LaunchScatter_CHIMERA(sData);
}
