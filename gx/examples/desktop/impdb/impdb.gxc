//===========================================================================
NAME          = "Import a Database table"
#include <version.gxh>
DESCRIPTION   = "
   Import a Database table into the Oasis montaj database.

    IMPDB.FILE       : Input data file name
    IMPDB.EXCELFILE  : Input Excel file name
"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database/Import/Database Table"

// Revision History:
// v6.4.0: Make scriptable by saving/getting template name, make template unique
//         to the input data file name.
// v5.1.6: Split out Excel using a flag.
// v5.1.3: Using "Current" X and Y channels
//         Added projection setting if enabled.
// v5.1.2: Using ADO instead of DAO.
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "impdb.gr"
#include "impdb.grh"

//===========================================================================
//                                  INCLUDE
//===========================================================================

#include <all.gxh>     // system

//===========================================================================
//                                 VARIABLES
//===========================================================================

EDB         EData;            // Database handle
DB          Data;             // Database handle
DGW         Diag;             // Dialogue handle

string(STR_FILE) sData, sConnect, sTemplate, sName;
string(STR_DB_SYMBOL) sLine;
int iSelect, iExcel;

//===========================================================================
//                                   CODE
//===========================================================================

{

   // --- Get Excel flag ---

   iExcel = iGetInt_SYS("IMPDB", "EXCEL");
   if(iExcel!=1) iExcel = 0;   
   SetInt_SYS("IMPDB", "EXCEL", 0);    // must set every call.


   // --- Get Oasis Database ---

   if (iInteractive_SYS()) {
      if (iHaveCurrent_EDB()) {

         if (iDisplayQuestion_SYS(_("Import Database"),_("Import data into the current database ?"))==0)
         {
            if (iRunGX_SYS("geogxnet.dll(Geosoft.GX.NewGDB.NewGDB;Run)"))  Cancel_SYS();
         }  

      } else {
        if (iRunGX_SYS("geogxnet.dll(Geosoft.GX.NewGDB.NewGDB;Run)")) Cancel_SYS();
      }
   }
   
   EData = Current_EDB();
   Data = Lock_EDB(EData);

     
   // --- Are we running interactively ? ---

   if (iInteractive_SYS()) {


      // --- Create the Dialogue ---

      if(iExcel) {
                  
         Diag = Create_DGW("IMPDBExcel");

   
         // --- Set any Defaults ---

         SetInfoSYS_DGW(Diag,_IMPDBEXCEL_0,DGW_FILEPATH,"IMPDB","EXCELFILE");
         SetInfoSYS_DGW(Diag,_IMPDBEXCEL_1,DGW_LISTALIAS,"IMPDB","SELECT");


         // --- Run the Dialogue ---

         if (iRunDialogue_DGW(Diag)) Cancel_SYS();


         // --- Get the Strings ---

         GetInfoSYS_DGW(Diag,_IMPDBEXCEL_0,DGW_FILEPATH,"IMPDB","EXCELFILE");
         GetInfoSYS_DGW(Diag,_IMPDBEXCEL_1,DGW_LISTALIAS,"IMPDB","SELECT");
      
      }
      else {

         Diag = Create_DGW("IMPDBForm");

         
         // --- Set any Defaults ---

         SetInfoSYS_DGW(Diag,_IMPDBFORM_0,DGW_FILEPATH,"IMPDB","FILE");
         SetInfoSYS_DGW(Diag,_IMPDBFORM_1,DGW_LISTALIAS,"IMPDB","SELECT");


         // --- Run the Dialogue ---

         if (iRunDialogue_DGW(Diag)) Cancel_SYS();


         // --- Get the Strings ---

         GetInfoSYS_DGW(Diag,_IMPDBFORM_0,DGW_FILEPATH,"IMPDB","FILE");
         GetInfoSYS_DGW(Diag,_IMPDBFORM_1,DGW_LISTALIAS,"IMPDB","SELECT");
      }


      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);


      // --- Get Parameters ---

      if(iExcel)
         GetString_SYS("IMPDB","EXCELFILE",sData);
      else
         GetString_SYS("IMPDB","FILE",sData);
      iSelect = iGetInt_SYS("IMPDB","SELECT");
      
      
      // --- Make Template name from the file name ---
      
      FileNamePart_STR(sData, sName, STR_FILE_PART_NAME_EXTENSION);
      FileExt_STR(sName, "i4", sTemplate, FILE_EXT_FORCE);
      SetString_SYS("IMPDB","TEMPLATE",sTemplate);
      
      
      // --- Make connection string ---
      
      Strcpy_STR(sConnect, "FILENAME=");
      Strcat_STR(sConnect, sData);

      if(iSelect == 0) {
         if (iImportDatabaseADO_GUI(sConnect,sTemplate,sLine,sizeof(sLine)))
            Cancel_SYS();
      } else {
         if (iImportDatabaseSQLADO_GUI(sConnect,"",sTemplate,sLine,sizeof(sLine)))
            Cancel_SYS();
      }            
   }


   // --- Get Template ---
   
   GetString_SYS("IMPDB","TEMPLATE",sTemplate);   
   
   
   // --- import ---

   Progress_SYS(1);
   ProgName_SYS(_("Importing Data"),1);
   ImportADO_DU(Data,"","",sTemplate,"");

   Progress_SYS(0);


   // --- release database to DBE ---
   
   UnLock_EDB(EData);
   
   
   // --- display data ---

   if (iInteractive_SYS()) {
      DelLine0_EDB(EData);
      SetCurLine_EDB(EData,sLine);
      LoadAllChans_EDB(EData);
      DelLine0_EDB(EData);
   }


   // --- Set projection if not set already. ---

   iRunGX_SYS("impsetprj");

}
