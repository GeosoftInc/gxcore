//===========================================================================
NAME          = "Calculate Vertical Acceleration correction"
#include <version.gxh>

TRANSLATIONDOMAIN = "gravity"
TRANSLATIONFRIENDLYPATH = "GX/AirGrav/Corrections by Steps"

DESCRIPTION   = "

   AGVACCOR.HEIGHT  Height channel
           .OUTCH   Output Vacc correction channel
"
// Revision History:
// v8.1.0: Replaced iGetLength_DB with iGetChannelLength_DB.
// v6.3: New GX.
    
//===========================================================================
//                               RESOURCES
//===========================================================================

RESOURCE = "agvaccor.gr"
#include "agvaccor.grh"

//===========================================================================
//                                INCLUDE
//===========================================================================

#include <all.gxh>     // system

//===========================================================================
//                               VARIABLES
//===========================================================================

DB          Data;                   // Database handle
EDB         EData;                  // Edited database handle
DGW         Diag;                   // Dialogue handle
LST         List;                   // Channel list handle
EXP         Exp;
VV          hVV;

DB_SYMB     Line,HeightCh,HTDCh,OutCh,TimeCh,TimeDCh;

int         i;                      // Utility

string(STR_DEFAULT)  sHeightCh,sHTDCh,sOutCh,sTimeDCh;
string(512)          sFormula;

//===========================================================================
//                                 CODE
//===========================================================================

{
   // --- Get database ---
   
   EData = Current_EDB();
   Data = Lock_EDB(EData);
   

   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {

      // --- Create the Dialogue ---

      Diag = Create_DGW("AGVACCOR");
                                                 

      // --- Set up channel lists ---
      
      List = GetList_DGW(Diag,_AGVACCOR_0);
      SymbLST_DB(Data,List,DB_SYMB_CHAN);
      Sort_LST(List,0,0);

      List = GetList_DGW(Diag,_AGVACCOR_1);
      SymbLST_DB(Data,List,DB_SYMB_CHAN);
      Sort_LST(List,0,0);
     

      // --- Set any Defaults ---
  
      SetInfoSYS_DGW(Diag,_AGVACCOR_0,DGW_TEXT,"AGVACCOR","HEIGHT");
      SetInfoSYS_DGW(Diag,_AGVACCOR_1,DGW_TEXT,"AGVACCOR","OUTCH");
                           
                             
      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i != 0) Cancel_SYS();           // They hit cancel
                                                 
     
      // --- Read inputs from the dialogue box ---
      
      GetInfoSYS_DGW(Diag,_AGVACCOR_0,DGW_TEXT,"AGVACCOR","HEIGHT");
      GetInfoSYS_DGW(Diag,_AGVACCOR_1,DGW_TEXT,"AGVACCOR","OUTCH");
     
      // --- Destroy the Dialogue ---
     
      Destroy_DGW(Diag);
   }

   // --- Get Parameters ---

   GetString_SYS("AGVACCOR","HEIGHT",sHeightCh);
   GetString_SYS("AGVACCOR","OUTCH",sOutCh);
    
   
   // --- Get handles to the input data channels ---

   if (!iExistChan_DB(Data,sHeightCh)) 
      Abort_SYS(_("The height channel does not exist."));
   if (!iExistChan_DB(Data,"Time")) 
      Abort_SYS(_("The Time channel does not exist."));

   HeightCh = FindChan_DB(Data,sHeightCh);
   TimeCh = FindChan_DB(Data,"Time");                       
   LockSymb_DB(Data,HeightCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);
   LockSymb_DB(Data,TimeCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);


   // --- Get handle to the output channel ---

   if (!iExistChan_DB(Data,sOutCh)) 
      OutCh = DupSymb_DB(Data,HeightCh,sOutCh);
   else {
      OutCh = FindChan_DB(Data,sOutCh);
      LockSymb_DB(Data,OutCh,DB_LOCK_READWRITE,DB_WAIT_NONE);                                  
      SetChanProtect_DB(Data,OutCh,DB_CHAN_UNPROTECTED);     
   }   
                         

   // --- Create derivative of Height and Time channels ---

   Strcpy_STR(sHTDCh,"Height_Deriv2");
   if (iExistChan_DB(Data,sHTDCh)) {
      HTDCh = FindChan_DB(Data,sHTDCh);
      LockSymb_DB(Data,HTDCh,DB_LOCK_READWRITE,DB_WAIT_NONE);                                  
   } else
      HTDCh = DupSymb_DB(Data,HeightCh,sHTDCh);        

   Strcpy_STR(sTimeDCh,"Time_Deriv");
   if (iExistChan_DB(Data,sTimeDCh)) {
      TimeDCh = FindChan_DB(Data,sTimeDCh);
      LockSymb_DB(Data,TimeDCh,DB_LOCK_READWRITE,DB_WAIT_NONE);                                  
   } else
      TimeDCh = DupSymb_DB(Data,TimeCh,sTimeDCh);        


   // --- Create expression ---

   Strcpy_STR(sFormula,"@td=$sTimeDCh*3600;$sOutCh=$sHTDCh/@td/@td*100000.0;");

   Exp = Create_EXP(Data,sFormula,512);

   hVV = Create_VV(REAL,0);


   // --- process the data ---

   Progress_SYS(1);
   ProgName_SYS(_("Calculating Vertical Acceleration correction"),0);

   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data,Line))
   {
      LockSymb_DB(Data,Line,DB_LOCK_READONLY,DB_WAIT_INFINITY);
      
      if(iGetChannelLength_DB(Data, Line, HeightCh) > 0) {

         GetChanVV_DB(Data,Line,TimeCh,hVV);
         Diff_VV(hVV,1);
         PutChanVV_DB(Data,Line,TimeDCh,hVV);

         GetChanVV_DB(Data,Line,HeightCh,hVV);
         Diff_VV(hVV,2);
         PutChanVV_DB(Data,Line,HTDCh,hVV);


         // --- Evaluate expression ---

         Math_DU(Data,Line,Exp);
      }

      // --- Advance to Next Line ---        

      UnLockSymb_DB(Data,Line);
      Line = NextSelLine_DB(Data, Line );
   }
   Destroy_EXP(Exp);


   // --- Add maker ---

   EasyMakerSymb_DB(Data,OutCh,_("Vertical Acceleration correction"),"AGVACCOR;");


   // --- Set protection and units of output channel ---

   SetChanUnit_DB(Data,OutCh,_("mGal"));   
   SetChanLabel_DB(Data,OutCh,_("Vacc Correction"));
   SetChanProtect_DB(Data,OutCh,DB_CHAN_PROTECTED);


   // --- Release GDB ---

   UnLockSymb_DB(Data,HeightCh);
   UnLockSymb_DB(Data,HTDCh);
   UnLockSymb_DB(Data,TimeCh);
   UnLockSymb_DB(Data,TimeDCh);
   UnLockSymb_DB(Data,OutCh);
   UnLock_EDB(EData);


   // --- Set default for AGFREEAIR GX ---

   SetString_SYS("AGFREEAIR","VACCCORCH", sOutCh);

   // --- Load channel ---

   LoadChan_EDB(EData,sOutCh);

   Progress_SYS(0);
}
