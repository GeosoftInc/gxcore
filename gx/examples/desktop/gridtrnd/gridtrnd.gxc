//===========================================================================
NAME          = "GRIDTRND"
#include <version.gxh>

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Grid and Image/Filters"

DESCRIPTION   = "\
Remove a Trend Surface from a Grid

Parameters:

     GRIDTRND.GRDIN      Name of Input Grid file
             .GRDOUT     Name of Output Grid with trend removed
             .POINTS     Points to Use in trend removal
                           ('EDGE' points only or 'ALL' points)
             .ORDER      Order of trend to remove:
                           (0,1,2, or 3. Default is 1.)
             .COEFF      Coefficients of the polynomial to 
                           remove. This is a comma-delimited
                           string of up to 10 real numbers.
             .REPLACE    Replace a previously removed trend.
                           ('NO' or 'YES'. Default is 'NO')
                           This is IGNORED if ANY of .POINTS,
                           .ORDER or .COEFF are set.\r\n"

//===========================================================================

RESOURCE = "gridtrnd.gr"
#include "gridtrnd.grh"

//===========================================================================

#include <all.gxh>

//===========================================================================
//                             GLOBAL VARIABLES
//===========================================================================

DGW        Diag;              // Dialogue handle

int        i;                 // utility int
int        iToks;             // Tokens in sCoeffs string

string(STR_FILE)  sGrdin;          // Name of input grid
string(STR_FILE)  sGrdout;         // Name of output grid
string(STR_DEFAULT_LONG) sCoeffs;         // Comma-delimited string of up 
                              // to 10 coefficients (reals
string(STR_DEFAULT_LONG) sTemp, sAliasFlag;           // Temp. string

int        iEdge;             // Which set of grid points to use (edge/all)
int        iOrder;            // Order of trend to remove
int        iTrOption;         // Flag  0-calculate,  1-given, 2-replace a
                              // previously removed trend
int        iBlank;            // Flag for blank parameters

real       rTemp;

VM         VMcoef;            // VM contains all of the coefficients

IMG        IMGI,IMGO;         // Input and output images

//===========================================================================
//                            GRID UTIL CODE
//===========================================================================

{
   
   if (iInteractive_SYS())
   {

      // --- Create the Dialogue ---

      Diag = Create_DGW("GRIDTRNDForm");
   
      // --- Set any Defaults from INI ---

      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_0,DGW_FILEPATH,"GRIDTRND","GRDIN");     
      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_1,DGW_FILEPATH,"GRIDTRND","GRDOUT");     
      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_2,DGW_LISTALIAS,"GRIDTRND","POINTS");    
      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_3,DGW_LISTALIAS,"GRIDTRND","ORDER");    
      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_4,DGW_TEXT,"GRIDTRND","COEFF");    
      SetInfoSYS_DGW(Diag,_GRIDTRNDFORM_5,DGW_LISTALIAS,"GRIDTRND","REPLACE");    

      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i != 0) Cancel_SYS();    // He hit cancel


      // --- Get the Strings and replace in INI ---

      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_0,DGW_FILEPATH,"GRIDTRND","GRDIN");     
      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_1,DGW_FILEPATH,"GRIDTRND","GRDOUT");     
      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_2,DGW_LISTALIAS,"GRIDTRND","POINTS");    
      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_3,DGW_LISTALIAS,"GRIDTRND","ORDER");    
      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_4,DGW_TEXT,"GRIDTRND","COEFF");    
      GetInfoSYS_DGW(Diag,_GRIDTRNDFORM_5,DGW_LISTALIAS,"GRIDTRND","REPLACE");    

      GetInfo_DGW(Diag,_GRIDTRNDFORM_5,DGW_LISTALIAS,sAliasFlag);

      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);

   } 
   

   // --- Flag for blank and TrOption parameters ---

   iBlank = 1;
   iTrOption = 0;      // calculate


   // --- Get Parameters ---

   GetString_SYS("GRIDTRND","GRDIN",sGrdin);
   GetString_SYS("GRIDTRND","GRDOUT",sGrdout);

   // --- Check for null input and output file name strings ---

   if (!iStrlen_STR(sGrdin))
      Abort_SYS(_("Input Grid was Not Specified!"));
      
   if (!iStrlen_STR(sGrdout))
      Abort_SYS(_("Output Grid was Not Specified!"));
 
 
   // --- Check the POINTS and ORDER parameters ---
 
   GetString_SYS("GRIDTRND","POINTS",sTemp);
   
   if (!iStrlen_STR(sTemp))
      iEdge = IMU_TREND_EDGE;
   else if (!iStrcmp_STR(sTemp,"EDGE",STR_CASE_TOLERANT))
      iEdge = IMU_TREND_EDGE;
   else if  (!iStrcmp_STR(sTemp,"ALL",STR_CASE_TOLERANT))
      iEdge = IMU_TREND_ALL;      
   else
      Abort_SYS(_("Grid Points Setting is Invalid! Must be 'EDGE' or 'ALL'"));
   if (iStrlen_STR(sTemp))
      iBlank = 0;

   GetString_SYS("GRIDTRND","ORDER",sTemp);
   
   if (!iStrlen_STR(sTemp))
      iOrder = 1;
   else if (!iStrcmp_STR(sTemp,"0",STR_CASE_SENSITIVE))
      iOrder = 0;
   else if  (!iStrcmp_STR(sTemp,"1",STR_CASE_SENSITIVE))
      iOrder = 1;
   else if (!iStrcmp_STR(sTemp,"2",STR_CASE_SENSITIVE))
      iOrder = 2;
   else if  (!iStrcmp_STR(sTemp,"3",STR_CASE_SENSITIVE))
      iOrder = 3;
   else
      Abort_SYS(_("Trend Order Setting is Invalid! Must be '0', '1', '2', or '3'"));
   if (iStrlen_STR(sTemp))
      iBlank = 0;

   
   // --- VM to hold coefficients ---
    
   VMcoef = Create_VM(REAL,10);

   // --- Check the number of tokens in coefficient string ---
   
   GetString_SYS("GRIDTRND","COEFF",sCoeffs);

   if (iStrlen_STR(sCoeffs))
   {
      iTrOption = 1;      // given
      iBlank = 0;
      iToks = iTokens_STR(sCoeffs,",");
      switch(iToks)
      {
         case 1:   iOrder = 0;  break;
         case 3:   iOrder = 1;  break;
         case 6:   iOrder = 2;  break;
         case 10:  iOrder = 3;  break;
         default:
            Abort_SYS(_("Coefficient string is Invalid! Must have 1,3,6 or 10 coefficients"));
      }


      // --- Put all of coefficients into VM ---     

      for (i=0; i<iToks; i++)
      {
         // --- Convert coeff. token to number ---

         rTemp = rDUMMY;
         GetToken_STR(sTemp,sCoeffs,i);
         rTemp = rScanR_STR(sTemp);
         if (rTemp == rDUMMY)
         {
            Destroy_VM(VMcoef);
            Abort_SYS(_("Invalid coefficient was found! All coefficients must be real numbers from -1e31 to 1e32"));
         }
         else
            SetReal_VM(VMcoef,i,rTemp);
      }
   }


   // --- Check the .REPLACE parameter ---

   GetString_SYS("GRIDTRND","REPLACE",sTemp);

   if (!iStrcmp_STR(sTemp,"YES",STR_CASE_TOLERANT) || !iStrcmp_STR(sAliasFlag,"1",STR_CASE_TOLERANT))

      iTrOption = 2;    // replace
         

   
   Progress_SYS(1);    

   ProgName_SYS(_("Creating Trend-Removed Grid File..."),1);

   // --- Create Images tied to the grids ---  
   
   IMGI = CreateFile_IMG(GS_DOUBLE,sGrdin,IMG_FILE_READONLY);
   IMGO = CreateOutFile_IMG(GS_DOUBLE,sGrdout,IMGI);

   // --- Create the Grid file ---

   GridTrnd_IMU(IMGI,IMGO,iTrOption,iEdge,iOrder,VMcoef,iToks);


   // --- Destroy the VM ---

   if (VMcoef)
      Destroy_VM(VMcoef);
   Destroy_SYS(IMGI);      
   Destroy_SYS(IMGO);
   
   
   // --- done ---

   Progress_SYS(0);
   
  
   // --- Add this grid to the current project ---

   if (iInteractive_SYS())   
      iAddDocument_PROJ(sGrdout,"Grid",1);
      
}
