//===========================================================================
NAME          = "Kriging from a control file."
#include <version.gxh>

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Grid and Image/Utilities"

DESCRIPTION   = "\

Create a grid using Kriging usnig a parameter control file.

Parameters: 

      KGCON.CHAN        - channel to grid
           .CONTROL     - control file
           .GRID        - name of new grid file
           .GRID_ERROR  - error grid
           .VAR_IN      - input variogram
           .VAR_OUT     - output variogram
           .LOGFILE     - Log file name (for default)
           .MODE        - 0: Grid 1: Variogram only
"
// Revision History:
// v6.1.4: Improve variogram only operation.
// v5.1.3: Using "Current" X and Y channels
//===========================================================================

RESOURCE = "kgcon.gr"
#include "kgcon.grh"

//===========================================================================

#include <all.gxh>


//===========================================================================
//                             GLOBAL VARIABLES
//===========================================================================

KGRD       Krigrid;       // Handle to Krigrid object
EDB        EData;
DB         Data;          // Database handle
DGW        Diag;          // Dialogue handle
LST        List;
WA         ConFile;        
RA         BlankFile;
MAP        Map;
EMAP       EMap;
MVIEW      MView;
 
int        iMode, iRet;
int        iVarOnly, iArcGIS, iInteractive;

string(64) sLicClass;
string(STR_FILE) sConName;     // Name of control file
string(STR_FILE) sGrdName;     // Name of new grid file
string(STR_FILE) sErrName;
string(STR_FILE) sVarIn; 
string(STR_FILE) sVarOut, sVarMap;
string(STR_FILE) sTemp, sName;        // Temporary string
string(STR_FILE) sLogFile;     // Log File
string(STR_DB_SYMBOL) sXCh, sYCh, sZCh;  // channels
                                           
//===========================================================================
//                           KGCON CODE
//===========================================================================

{
   // --- Are we running inside ArcGIS ---

   GetLicenseClass_SYS(sLicClass);
   iArcGIS = iStrcmp_STR(sLicClass, "ArcGIS", STR_CASE_TOLERANT) == 0;


   // --- Get the Database ---

   EData = Current_EDB();
   Data = Lock_EDB(EData);
   

   // --- Make a KGCON object ---

   Krigrid = Create_KGRD();


   // --- INTERACTIVE ---

   if (iInteractive_SYS()) 
   {
   

      // --- Create the Dialogue ---

      Diag = Create_DGW("KGCON");


      // --- Set up lists ---

      List = GetList_DGW(Diag,_KGCON_0);
      SymbLST_DB(Data,List,DB_SYMB_CHAN);
      Sort_LST(List,0,0);

      
      // --- display dialogue until OK ---
      iMode = 2;
      while (iMode == 2) {
      
         
         // --- Set any Defaults from INI ---

         SetInfoSYS_DGW(Diag,_KGCON_0,DGW_TEXT,"KGCON","CHAN");
         SetInfoSYS_DGW(Diag,_KGCON_1,DGW_FILEPATH,"KGCON","GRID");
         SetInfoSYS_DGW(Diag,_KGCON_2,DGW_FILEPATH,"KGCON","CONTROL");
         SetInfoSYS_DGW(Diag,_KGCON_3,DGW_FILEPATH,"KGCON","GRID_ERROR");
         SetInfoSYS_DGW(Diag,_KGCON_4,DGW_FILEPATH,"KGCON","VAR_IN");
         SetInfoSYS_DGW(Diag,_KGCON_5,DGW_FILEPATH,"KGCON","VAR_OUT");


         // --- Run the Dialogue ---

         iMode = iRunDialogue_DGW(Diag);
         if (iMode == -1) Cancel_SYS();
            
         
         // --- Put values back in INI ---

         GetInfoSYS_DGW(Diag,_KGCON_0,DGW_TEXT,"KGCON","CHAN");
         GetInfoSYS_DGW(Diag,_KGCON_1,DGW_FILEPATH,"KGCON","GRID");
         GetInfoSYS_DGW(Diag,_KGCON_2,DGW_FILEPATH,"KGCON","CONTROL");
         GetInfoSYS_DGW(Diag,_KGCON_3,DGW_FILEPATH,"KGCON","GRID_ERROR");
         GetInfoSYS_DGW(Diag,_KGCON_4,DGW_FILEPATH,"KGCON","VAR_IN");
         GetInfoSYS_DGW(Diag,_KGCON_5,DGW_FILEPATH,"KGCON","VAR_OUT");


         if (iMode == 2)         // edit control file
         {
         
         
            // --- control file name ---
            
            GetString_SYS("KGCON","CONTROL",sConName);
            if (iStrMin2_STR(sConName) == 0) {
            
               GetString_SYS("KGCON","GRID",sGrdName);
               FileNamePart_STR(sGrdName,sConName,STR_FILE_PART_NAME);
               Strcat_STR(sConName,".con");
               
            }
            
            
            // --- if file does not exist, make a blank copy ---
            
            if (iFileExist_SYS(sConName) == 0) {
            
            
               // --- find KRIGRID blank ---
                 
               if (iFindPathNameEx_SYS("krigrid.con",FIND_GEOSOFT,GEO_DIRECTORY_USER_ETC,sTemp) == 0) {

                  BlankFile = Create_RA(sTemp);
                  ConFile = Create_WA(sConName,WA_NEW);            
                  
                  while (iGets_RA(BlankFile,sTemp) == 0) {
                     Puts_WA(ConFile,sTemp);
                     NewLine_WA(ConFile);
                  }
                  
                  Destroy_SYS(BlankFile);
                  Destroy_SYS(ConFile);
                  
               }
            }
            
            
            // --- edit file ---
                  
            SetString_SYS("EDIT","FILE",sConName);
            SetString_SYS("EDIT","WAIT","WAIT");
            iRunGX_SYS("edit");
            GetString_SYS("EDIT","FILE",sConName);
            SetString_SYS("KGCON","CONTROL",sConName);

         }
         else 
         {
            if(iMode==0)
            {
               // --- Check if grid exists ---
               
               GetString_SYS("KGCON","GRID",sGrdName);
               if(!iStrlen_STR(sGrdName))
               {
                  DisplayMessage_SYS(_("Kriging from a control file"), _("You must enter a value for \"New grid file\""));
                  iMode = 2;
                  continue;
               }
            
               if(iFileExist_SYS(sGrdName)==1)
               {
                  iRet = iDisplayQuestionWithCancel_SYS(_("Kriging from a control file"), _("Do you wish to overwrite the existing grid file?"));
                  if(iRet==2) Cancel_SYS();
                  if(iRet==0)
                  {  
                     iMode = 2;
                     continue;
                  }
               }
            }

            // --- Check if output variogram is defined ---
               
            GetString_SYS("KGCON","VAR_OUT",sVarOut);
            if(!iStrlen_STR(sVarOut) && iMode==1)
            {
               DisplayMessage_SYS(_("Kriging from a control file"), _("You must enter a value for \"Output variogram\""));
               iMode = 2;
               continue;
            }
            else if(iStrlen_STR(sVarOut) && iFileExist_SYS(sVarOut)==1)
            {
               iRet = iDisplayQuestionWithCancel_SYS(_("Kriging from a control file"), _("Do you wish to overwrite the existing variogram file?"));
               if(iRet==2) Cancel_SYS();
               if(iRet==0)
               {  
                  iMode = 2;
                  continue;
               }
            }
            
            
            // --- Check overwrite of optional error grid ---
            
            GetString_SYS("KGCON","GRID_ERROR",sErrName);
            if(iStrlen_STR(sErrName) && iFileExist_SYS(sErrName)==1)
            {
               iRet = iDisplayQuestionWithCancel_SYS(_("Kriging from a control file"), _("Do you wish to overwrite the existing error grid file?"));
               if(iRet==2) Cancel_SYS();
               if(iRet==0)
               {  
                  iMode = 2;
                  continue;
               }
            }
            
            SetInt_SYS("KGCON", "MODE", iMode);
         }
      }         

      Destroy_DGW(Diag);
      
   } 
   
   
   // --- Get current mode ---
   
   iMode = iGetInt_SYS("KGCON", "MODE");
   if(iMode!=1) iMode = 0;
   
   
   // --- variogram only? ---
   
   iVarOnly = FALSE;
   if (iMode == 1) iVarOnly = TRUE;

               
   // --- A control file is required ---

   GetString_SYS("KGCON","CONTROL",sConName);   
   
   
   // --- If none is defined, create a blank copy of \etc\krigrid.con ---
   
   if (iStrMin2_STR(sConName) == 0) 
   {
		//--- Try to create from the grid name, if it exists ---
		
		if(iMode==0)
		{
			GetString_SYS("KGCON","GRID",sGrdName);
			if(iStrlen_STR(sGrdName) > 0)
			{
				FileNamePart_STR(sGrdName,sConName,STR_FILE_PART_NAME);
				Strcat_STR(sConName,".con");
			}
      }
      
      
      // --- Default to krigrid.con ---
      
      if(iStrlen_STR(sConName) == 0)
			Strcpy_STR(sConName,"krigrid.con");
   
   
		// --- if file does not exist, make a copy of \etc\krigrid.con ---
	   
		if (iFileExist_SYS(sConName) == 0) 
		{
			// --- find KRIGRID blank ---
	        
			if (iFindPathNameEx_SYS("krigrid.con",FIND_GEOSOFT,GEO_DIRECTORY_USER_ETC,sTemp) == 0) {

				BlankFile = Create_RA(sTemp);
				ConFile = Create_WA(sConName,WA_NEW);            
	         
				while (iGets_RA(BlankFile,sTemp) == 0) {
					Puts_WA(ConFile,sTemp);
					NewLine_WA(ConFile);
				}
	         
				Destroy_SYS(BlankFile);
				Destroy_SYS(ConFile);
	         
			}
			else
				Abort_SYS(_("No control file was specified, and was unable to create a default using krigrid.con."));			
		}
	}
	
	if (!iFileExist_SYS(sConName))
         Abort_SYS(_("Control file does not exist."));


   // --- output variogram ---
   
   GetString_SYS("KGCON","VAR_OUT",sVarOut);
   
   if(iMode==0)
      GetString_SYS("KGCON","GRID",sGrdName);
      
   GetString_SYS("KGCON","GRID_ERROR",sErrName);
   GetString_SYS("KGCON","VAR_IN",sVarIn);
   GetString_SYS("KGCON","LOGFILE",sLogFile); 
   

   // --- Get current X, Y channels ---

   GetXYZChan_DB(Data, DB_CHAN_X, sXCh);
   GetXYZChan_DB(Data, DB_CHAN_Y, sYCh);

            
   // --- See if grid channels exist ---

   if (!iExistSymb_DB(Data,sXCh,DB_SYMB_CHAN))
      Abort_SYS(_("The current X Channel does not exist in database"));

   if (!iExistSymb_DB(Data,sYCh,DB_SYMB_CHAN))
      Abort_SYS(_("The current Y Channel does not exist in database"));

   GetString_SYS("KGCON","CHAN",sZCh);   
   if (!iExistSymb_DB(Data,sZCh,DB_SYMB_CHAN))
      Abort_SYS(_("The Z Channel does not exist in database"));
      
   



   // --- Turn on Progress bar ---

   Progress_SYS(1);


   // --- Execute Krigrid program ---

   iRun3_KGRD(Data, sXCh, sYCh, sZCh, sConName, sGrdName, sErrName, sVarIn, sVarOut, sLogFile,iVarOnly);


   // --- Progress Bar ---

   Progress_SYS(0);
 
   
   // --- Add this grid to the current project ---
   
   iInteractive = iInteractive_SYS();
   if(!iScript_SYS())
   {
      if(iMode==0)
      {
         iAddDocument_PROJ(sGrdName,"Grid",1);
      }
      else if(iMode==1)
      {
         
         // --- Create variogram map from variogram file name ---
         
         FileNamePart_STR(sVarOut, sName, STR_FILE_PART_NAME);
         Strcpy_STR(sVarMap, sName);
         Strcat_STR(sVarMap, "_variogram.map");
         
         
         // --- Delete existing variogram map ---
         
         if(iFileExist_SYS(sVarMap)) {
            if(iLoaded_EMAP(sVarMap)) UnLoad_EMAP(sVarMap);
            iDeleteFile_SYS(sVarMap);
         }


         // --- Create new map ---

         Map = Create_MAP(sVarMap, MAP_WRITENEW);
         

         // --- Create a Data view ---      
         
         MView = Create_MVIEW(Map, "Data", MVIEW_WRITENEW);    // Variogram GX needs a Data view to run      
         Destroy_MVIEW(MView);
         Destroy_MAP(Map);


         // --- Load the map ---

         EMap = Load_EMAP(sVarMap);

         // --- Run the variogram GX ---

         SetString_SYS("VARIOGRM","FILE",sVarOut);

         SetInteractive_SYS(0);
         iRunGX_SYS("variogrm.gx");
         SetInteractive_SYS(iInteractive);
         
         
         // --- Delete the empty "Data" view ---
         
         Map = Lock_EMAP(EMap);
         DeleteView_MAP(Map, "Data");
         UnLock_EMAP(EMap);

         if (iArcGIS)
         {
            Map = Lock_EMAP(EMap);
            SimpleMapDialog_GUI(Map, _("Variogram"), "The_Variogram");
            UnLock_EMAP(EMap);
         }
         else
         {
            // --- Resize to full map ---

            SetInteractive_SYS(0);
            iRunGX_SYS("reszmap.gx");
            SetInteractive_SYS(iInteractive);
         }
      }
   }

   
   
   
   // --- Release the Database ---

   UnLock_EDB(EData);
}
