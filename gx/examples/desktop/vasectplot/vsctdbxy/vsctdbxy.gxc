//===========================================================================
NAME          = "Find the X-Y range of data in a database with section data"
#include <version.gxh>

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database Tools"

DESCRIPTION   = "

"
// Revision History:
// v5.1.8: New GX.
//===========================================================================

RESOURCE = "vsctdbxy.gr"
#include "vsctdbxy.grh"
#include <all.gxh>


//===========================================================================
//                             VARIABLES
//===========================================================================

string(100) sTemp,sLabel;
string(STR_GROUP)  sMinX,sMinY,sMaxX,sMaxY;
string(GS_MAX_PATH) sGDB;

DB       Data;
DB_SYMB  XCh,YCh;          // Channel handles
DB_SYMB  Line;             // Line handle
DGW      Diag;
ST       Xstat,Ystat;      // statistics
ST       LonStat,LatStat;  // statistics
IPJ      hIPJ;
PJ       hPJ;
SBF      hSBF;
BF       hBF;
VV       hXVV,hYVV;

int   iLines,iTotLines,iProj;
int   i;
real  rMinX,rMinY,rMaxX,rMaxY;


//===========================================================================
//                           MAP CODE
//===========================================================================

{
   if (iInteractive_SYS()) {
      
      Diag = Create_DGW("VSCTDBXY");
      SetInfoSYS_DGW(Diag,_VSCTDBXY_0,DGW_FILEPATH,"VSCTDBXY","GDB");     
      i = iRunDialogue_DGW(Diag);
      if (i == -1) Cancel_SYS();
      GetInfoSYS_DGW(Diag,_VSCTDBXY_0,DGW_FILEPATH,"VSCTDBXY","GDB");     
   }   
   GetString_SYS("VSCTDBXY","GDB",sGDB);
   Data = Open_DB(sGDB,"SUPER","");
   
   
   // --- Do the reference channels exist ? ---

   if (!iExistSymb_DB(Data,"X",DB_SYMB_CHAN) || !iExistSymb_DB(Data,"Y",DB_SYMB_CHAN)) {
   
      if (iInteractive_SYS())
         DisplayMessage_SYS(_("VSCTDBXY"),_("X or Y channel does not exist."));
      else   
         Abort_SYS(_("X or Y channel does not exist."));
         
   } else { 
   
      // --- get X and Y symbols ---        
            
      XCh = FindSymb_DB(Data,"X",DB_SYMB_CHAN);
      YCh = FindSymb_DB(Data,"Y",DB_SYMB_CHAN);


      // --- get/serialize IPJ ---
      
      hIPJ = Create_IPJ();
      GetIPJ_DB(Data,XCh,hIPJ);
      hSBF = hGetSYS_SBF();
      hBF = CreateSBF_BF(hSBF,"_xyrange.ipj",BF_READWRITE_NEW);
      Serial_IPJ(hIPJ,hBF);
      DestroyEx_BF(hBF);
      Destroy_SBF(hSBF);
      
      
      // --- is there a projection? ---
      
      if (iSourceType_IPJ(hIPJ) == IPJ_TYPE_PCS) {
         iProj = TRUE;
         hPJ = CreateIPJ_PJ(hIPJ,(IPJ)0);
      } else   
         iProj = FALSE;
         
      Destroy_IPJ(hIPJ);
      
      
      // --- Get stat handles ---

      Xstat = Create_ST();
      Ystat = Create_ST();
      
      if (iProj) {
         LonStat = Create_ST();
         LatStat = Create_ST();
      }
      
      
      // --- Get VVs for data ---
      
      hXVV = Create_VV(REAL,0);
      hYVV = Create_VV(REAL,0);


      // --- Lock the channel symbols ---

      LockSymb_DB(Data,XCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);
      LockSymb_DB(Data,YCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);


      // --- Go through all selected Lines ---

      iLines = 0;
      iTotLines = iCountSelLines_DB(Data);
      Progress_SYS(1);
      Line = FirstSelLine_DB(Data);
      while (iIsLineValid_DB(Data,Line))
      {

         // --- Update the Progress Bar ---

         LockSymb_DB(Data,Line,DB_LOCK_READONLY,DB_WAIT_INFINITY);
         GetSymbName_DB(Data,Line,sTemp);
         UnLockSymb_DB(Data,Line);
         Strcpy_STR(sLabel,_("Scanning line: "));
         Strcat_STR(sLabel,sTemp);
         ProgName_SYS(sLabel,0);
         ProgUpdate_SYS( (int) ((real) iLines / (real) iTotLines * 100.0) );
         
         
         // --- get data ---

         GetChanVV_DB(Data,Line,XCh,hXVV);
         GetChanVV_DB(Data,Line,YCh,hYVV);
         ReFidVV_VV(hYVV,hXVV);
         

         // --- Accumulate stats ---

         Statistics_VV(Xstat,hXVV);
         Statistics_VV(Ystat,hYVV);
         
         
         // --- project and accumulate ---
         
         if (iProj) {
            ConvertVV_PJ(hPJ,hXVV,hYVV);
            Statistics_VV(LonStat,hXVV);
            Statistics_VV(LatStat,hYVV);
         }            
            

         // --- Advance to Next Line ---        

         Line = NextSelLine_DB(Data, Line );
         iLines++;
         
      }         
      ProgUpdate_SYS(100);
      Progress_SYS(0);


      // --- Unlock the channel symbol ---

      UnLockSymb_DB(Data,XCh);
      UnLockSymb_DB(Data,YCh);


      // --- X,Y range ---

      rMinX = rGetInfo_ST(Xstat,ST_MIN);
      rMaxX = rGetInfo_ST(Xstat,ST_MAX);
      rMinY = rGetInfo_ST(Ystat,ST_MIN);
      rMaxY = rGetInfo_ST(Ystat,ST_MAX);


      // --- set INI parameters ---

      FormatR_STR(rMinX,sMinX,20,10);
      FormatR_STR(rMinY,sMinY,20,10);
      FormatR_STR(rMaxX,sMaxX,20,10);
      FormatR_STR(rMaxY,sMaxY,20,10);

      SetString_SYS("VSCTDBXY","MIN_X",sMinX);
      SetString_SYS("VSCTDBXY","MIN_Y",sMinY);
      SetString_SYS("VSCTDBXY","MAX_X",sMaxX);
      SetString_SYS("VSCTDBXY","MAX_Y",sMaxY);
      
      
      // --- lon/lat range ---
      
      if (iProj) {

         rMinX = rGetInfo_ST(LonStat,ST_MIN);
         rMaxX = rGetInfo_ST(LonStat,ST_MAX);
         rMinY = rGetInfo_ST(LatStat,ST_MIN);
         rMaxY = rGetInfo_ST(LatStat,ST_MAX);


         // --- set INI parameters ---

         FormatR_STR(rMinX,sMinX,20,10);
         FormatR_STR(rMinY,sMinY,20,10);
         FormatR_STR(rMaxX,sMaxX,20,10);
         FormatR_STR(rMaxY,sMaxY,20,10);

         SetString_SYS("VSCTDBXY","MIN_LON",sMinX);
         SetString_SYS("VSCTDBXY","MIN_LAT",sMinY);
         SetString_SYS("VSCTDBXY","MAX_LON",sMaxX);
         SetString_SYS("VSCTDBXY","MAX_LAT",sMaxY);
         
      } else {
      
         SetString_SYS("VSCTDBXY","MIN_LON","*");
         SetString_SYS("VSCTDBXY","MIN_LAT","*");
         SetString_SYS("VSCTDBXY","MAX_LON","*");
         SetString_SYS("VSCTDBXY","MAX_LAT","*");
         
      }


      // --- destroy resources ---

      Destroy_SYS(Xstat);
      Destroy_SYS(Ystat);
      Destroy_SYS(hXVV);
      Destroy_SYS(hYVV);
      if (iProj) Destroy_SYS(hPJ);
      
   }
   
   Destroy_DB(Data);

}
